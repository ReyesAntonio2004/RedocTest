openapi: '3.0.1'
info:
  title: Combined API Documentation
  version: '1.0.0'
paths:
  /messages/{MessageSID}:
    get:
      tags:
        - IMessageWebService
      summary:  GetMessage
      parameters:
          - name: MessageSID
            in: path
            required: true
            schema:
              type: "string"
            example: 15
          - name: includeImageData
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InboxMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages/:
    get:
      tags:
        - IMessageWebService
      summary:  GetMessages
      parameters:
          - name: messageType
            in: query
            required: False
            schema:
              type: "string"
            example: DVIRInspection
          - name: formNumber
            in: query
            required: False
            schema:
              type: "string"
            example: Global_DVIR_0003
          - name: includeImageData
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: orderDirection
            in: query
            required: False
            schema:
              type: "string"
            example: ASC
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: e3757138-011d-404f-b134-adeeee45b7b2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InboxMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages/read:
    get:
      tags:
        - IMessageWebService
      summary:  GetReadMessages
      parameters:
          - name: messageType
            in: query
            required: False
            schema:
              type: "string"
            example: DVIRInspection
          - name: formNumber
            in: query
            required: False
            schema:
              type: "string"
            example: Global_DVIR_0003
          - name: includeImageData
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: orderDirection
            in: query
            required: False
            schema:
              type: "string"
            example: ASC
          - name: messageSID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: imageSID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: EndDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InboxMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages/status/{MessageSID}:
    get:
      tags:
        - IMessageWebService
      summary:  GetMessageStatus
      parameters:
          - name: MessageSID
            in: path
            required: true
            schema:
              type: "string"
            example: 15
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages/status/:
    get:
      tags:
        - IMessageWebService
      summary:  GetAllMessageStatus
      parameters:
          - name: messageType
            in: query
            required: False
            schema:
              type: "string"
            example: DVIRInspection
          - name: formNumber
            in: query
            required: False
            schema:
              type: "string"
            example: Global_DVIR_0003
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages/{MessageSID}/attachment/{ImageSID}:
    get:
      tags:
        - IMessageWebService
      summary:  GetMessageAttachment
      parameters:
          - name: MessageSID
            in: path
            required: true
            schema:
              type: "string"
            example: 20
          - name: ImageSID
            in: path
            required: true
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachment"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages/{MessageSID}/signature/{ImageSID}:
    get:
      tags:
        - IMessageWebService
      summary:  GetMessageSignature
      parameters:
          - name: MessageSID
            in: path
            required: true
            schema:
              type: "string"
            example: 20
          - name: ImageSID
            in: path
            required: true
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Signature"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages:
    post:
      tags:
        - IMessageWebService
      summary:  PostMessage
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Message"
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
          text/json:
            schema:
              $ref: "#/components/schemas/Message"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages/recall/{MessageSID}:
    post:
      tags:
        - IMessageWebService
      summary:  PostMessageRecall
      parameters:
          - name: MessageSID
            in: path
            required: true
            schema:
              type: "string"
            example: 20
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages/recall:
    post:
      tags:
        - IMessageWebService
      summary:  PostMessageListRecall
      requestBody:
        content:
          application/json-patch+json:
            schema:
                type: array
                items: 
                  type: string
          application/json:
            schema:
                type: array
                items: 
                  type: string
          text/json:
            schema:
                type: array
                items: 
                  type: string
          application/*+json:
            schema:
                type: array
                items: 
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /messages/update/{MessageSID}:
    put:
      tags:
        - IMessageWebService
      summary:  PutMessage
      parameters:
          - name: MessageSID
            in: path
            required: true
            schema:
              type: "string"
            example: 20
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DelayDetail/:
    get:
      tags:
        - IDelayDetailWebService
      summary:  GetDelayDetailReportList
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 54
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: driverID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: routeID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: delayReason
            in: query
            required: False
            schema:
              type: "string"
            example: Weather
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-05-15 16:00:46.356
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-03-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DelayDetailReport"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DelaySummary/:
    get:
      tags:
        - IDelaySummaryWebService
      summary:  GetDelaySummaryReportList
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 54
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: driverID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: routeID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: delayReason
            in: query
            required: False
            schema:
              type: "string"
            example: Weather
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-05-15 16:00:46.356
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-03-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DelaySummaryReport"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /OORR/:
    get:
      tags:
        - IOutOfRouteWebService
      summary:  GetOutOfRouteReport
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: fromDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-04-15 16:00:46.356
          - name: toDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-03-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutOfRouteReport"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /PVAVLSR/:
    get:
      tags:
        - IPlanVsActualVsLearnedStandardsWebService
      summary:  GetPlanVsActualVsLearnedStandardsReport
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 5f4dcc3b-5aa7-48c7-bf2e-d6a3ef5d1234
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 9e1a1e88-3e8b-4d9a-a3b3-8c7d9b6e5678
          - name: driverID
            in: query
            required: False
            schema:
              type: "string"
            example: a2b1c9f3-d74f-4918-9ed3-2a98c91c3456
          - name: vehicleID
            in: query
            required: False
            schema:
              type: "string"
            example: d3e6c4a9-91e8-4c33-b94a-7e6d1b234567
          - name: fromDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: toDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanVsActualVsLearnedStandards"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /PVAR/:
    get:
      tags:
        - IPlanVsActualVsLearnedStandardsWebService
      summary:  GetPlanVsActualReport
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: a74f19e8-4451-4d0b-a83e-2f3c99e12345
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: e63a2d1c-7749-431c-9a6e-8c9f4e567890
          - name: fromDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-02-01
          - name: toDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-02-28
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 10
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanVsActual"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /RSTR/:
    get:
      tags:
        - IRouteStatusWebService
      summary:  GetRouteStatusReport
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: fromDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: toDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteStatusReport"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /SITR/:
    get:
      tags:
        - ISiteActivityWebService
      summary:  GetSiteActivityReport
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: e3f957b6-1c0b-4e3e-bd3c-7aef6efb3772
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: a1f957b6-1c0b-4e3e-bd3c-7aef6efb3001
          - name: fromDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: toDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteActivity"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Trailer/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetEldTrailerData
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EldTrailerData"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /ShippingInfo/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetShippingData
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingData"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /CarrierInfo/{organizationSID}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetCarrierInfo
      parameters:
          - name: organizationSID
            in: path
            required: true
            schema:
              type: "string"
            example: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierInfo"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /CoDrivers/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetCoDriverData
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoDriverData"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /IntermediateLogs/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetIntermediateLogs
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntermediateLog"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /CertifiedLogs/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetCertifiedLogs
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertifiedLogs"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /EnginePowerEvents/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetEnginePowerEvents
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EldEnginePowerEvent"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /EldLoginLogoutActivity/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetEldLoginLogoutActivity
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EldLoginLogoutActivity"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DriverException/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetDriverExceptions
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverException"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Remarks/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetEldRemarks
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EldRemarks"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /EldDriverStatus/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetEldDriverStatus
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EldDriverStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /UnassignedActivity/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetUnassignedActivity
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: rejectedDriverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EldDriverStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /VehicleEldData/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetVehicleEldData
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleEldData"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /EldDiagAndMalfunctions/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetEldDiagAndMalfunctions
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EldDiagAndMalfunctions"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DriverTerminalInfo/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetDriverTerminalInfo
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverTerminalInfo"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DriverRuleChange/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetEldDriverRuleChange
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EldDriverRuleChange"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DriverAnnotations/{organizationSid}:
    get:
      tags:
        - IEldLogWebService
      summary:  GetDriverAnnotations
      parameters:
          - name: organizationSid
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: driverSid
            in: query
            required: False
            schema:
              type: "string"
            example: 24
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotations"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /UVA/:
    get:
      tags:
        - IUnassignedVehicleActivityWebService
      summary:  GetUnassignedVehicleActivity
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: status
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnassignedVehicleActivity"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /UVA/vehicle/{VehicleID}:
    get:
      tags:
        - IUnassignedVehicleActivityWebService
      summary:  GetUnassignedVehicleActivityByVehicleId
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: 7
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: status
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnassignedVehicleActivity"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  v2/UVA/vehicle/{VehicleID}:
    get:
      tags:
        - IUnassignedVehicleActivityWebService
      summary:  GetUnassignedVehicleActivityByVehicleIdV2
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: 7
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: status
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnassignedVehicleActivityV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /UVA/segment/{segmentSid}/classification/:
    put:
      tags:
        - IUnassignedVehicleActivityWebService
      summary:  PutUnassignedVehicleActivityClassificationBySegmentSid
      parameters:
          - name: segmentSid
            in: path
            required: true
            schema:
              type: "string"
            example: 2
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/UnassignedVehicleActivitySegmentReclassify"
          application/json:
            schema:
              $ref: "#/components/schemas/UnassignedVehicleActivitySegmentReclassify"
          text/json:
            schema:
              $ref: "#/components/schemas/UnassignedVehicleActivitySegmentReclassify"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UnassignedVehicleActivitySegmentReclassify"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /criticaleventsummary/:
    get:
      tags:
        - ICriticalEventWebService
      summary:  GetCriticalEventSummary
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: e83a77bd-8a4e-4b22-91c3-f9b9c92f6d52
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-02T10:45:00Z
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: false
          - name: onlyShowEventsWithVideo
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: orderDirection
            in: query
            required: False
            schema:
              type: "string"
            example: desc
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 10
          - name: showOnlyAvailableVideos
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriticalEventSummary"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /criticaleventsummary/vehicle/{VehicleID}:
    get:
      tags:
        - ICriticalEventWebService
      summary:  GetCriticalEventSummaryByVehicleId
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: 9a6c30f5-3d8f-4d5c-bb4b-1c7df9d7998f
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-02-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-02-28
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-02-15T12:30:00Z
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: onlyShowEventsWithVideo
            in: query
            required: False
            schema:
              type: "string"
            example: false
          - name: orderDirection
            in: query
            required: False
            schema:
              type: "string"
            example: asc
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 25
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: showOnlyAvailableVideos
            in: query
            required: False
            schema:
              type: "string"
            example: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriticalEventSummary"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /criticaleventsummary/driver/{DriverID}:
    get:
      tags:
        - ICriticalEventWebService
      summary:  GetCriticalEventSummaryByDriverId
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: 4c9f6e91-2b45-4979-a3df-98d3c708a723
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-03-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-03-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-03-15T14:00:00Z
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: false
          - name: onlyShowEventsWithVideo
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: orderDirection
            in: query
            required: False
            schema:
              type: "string"
            example: desc
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 20
          - name: showOnlyAvailableVideos
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriticalEventSummary"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /blackboxsummary/:
    get:
      tags:
        - IBlackBoxWebService
      summary:  GetBlackBoxSummary
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: ORG15
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: onlyShowEventsWithVideo
            in: query
            required: False
            schema:
              type: "string"
            example: false
          - name: orderDirection
            in: query
            required: False
            schema:
              type: "string"
            example: DESCENDING
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlackBoxSummary"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /blackboxsummary/vehicle/{VehicleID}:
    get:
      tags:
        - IBlackBoxWebService
      summary:  GetBlackBoxSummaryByVehicleId
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: VHC15
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: onlyShowEventsWithVideo
            in: query
            required: False
            schema:
              type: "string"
            example: false
          - name: orderDirection
            in: query
            required: False
            schema:
              type: "string"
            example: DESCENDING
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlackBoxSummary"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /blackboxsummary/driver/{DriverID}:
    get:
      tags:
        - IBlackBoxWebService
      summary:  GetBlackBoxSummaryByDriverId
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: DRV74
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: onlyShowEventsWithVideo
            in: query
            required: False
            schema:
              type: "string"
            example: false
          - name: orderDirection
            in: query
            required: False
            schema:
              type: "string"
            example: DESCENDING
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlackBoxSummary"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /reportdata/{ReportID}:
    get:
      tags:
        - IReportDataWebService
      summary:  GetReportData
      parameters:
          - name: ReportID
            in: path
            required: true
            schema:
              type: "string"
            example: R1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /rawdata/{ReportID}:
    get:
      tags:
        - IReportDataWebService
      summary:  GetRawReportData
      parameters:
          - name: ReportID
            in: path
            required: true
            schema:
              type: "string"
            example: R1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /reportdata:
    get:
      tags:
        - IReportDataWebService
      summary:  GetReportDataPath
      parameters:
          - name: ReportPath
            in: query
            required: False
            schema:
              type: "string"
            example: Views/Customer/Report/Parameter/
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /rawdata:
    get:
      tags:
        - IReportDataWebService
      summary:  GetRawReportDataPath
      parameters:
          - name: ReportPath
            in: query
            required: False
            schema:
              type: "string"
            example: Views/Customer/Report/Parameter/
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /reportdataex/{ReportID}:
    get:
      tags:
        - IReportDataWebService
      summary:  GetReportDataEx
      parameters:
          - name: ReportID
            in: path
            required: true
            schema:
              type: "string"
            example: R1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportData"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /reportdataex:
    get:
      tags:
        - IReportDataWebService
      summary:  GetReportDataExPath
      parameters:
          - name: ReportPath
            in: query
            required: False
            schema:
              type: "string"
            example: Views/Customer/Report/Parameter/
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportData"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /reportparameters/{ReportID}:
    get:
      tags:
        - IReportDataWebService
      summary:  GetReportParameters
      parameters:
          - name: ReportID
            in: path
            required: true
            schema:
              type: "string"
            example: R1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportParameters"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /reportparameters:
    get:
      tags:
        - IReportDataWebService
      summary:  GetReportParametersPath
      parameters:
          - name: ReportPath
            in: query
            required: False
            schema:
              type: "string"
            example: Views/Customer/Report/Parameter/
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportParameters"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Summary/:
    get:
      tags:
        - IOperationWebService
      summary:  GetAllOperationSummary
      parameters:
          - name: assetType
            in: query
            required: False
            schema:
              type: "string"
            example: Vehicle
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: f8e99bbf-40c4-4d79-b4f2-5f64ac999b82
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: false
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-15T08:00:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationSummary"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Summary/vehicle/{VehicleID}:
    get:
      tags:
        - IOperationWebService
      summary:  GetOperationSummaryByVehicleId
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: 550e8400-e29b-41d4-a716-446655440000
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-15T08:00:00Z
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationSummary"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Summary/driver/{DriverID}:
    get:
      tags:
        - IOperationWebService
      summary:  GetOperationSummaryByDriverId
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: b4f4a9c7-912f-4e21-8b69-33065d74e93c
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-15T08:00:00Z
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationSummary"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Profile/:
    get:
      tags:
        - IOperationWebService
      summary:  GetAllOperationProfile
      parameters:
          - name: assetType
            in: query
            required: False
            schema:
              type: "string"
            example: Machine
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: e3f957b6-1c0b-4e3e-bd3c-7aef6efb3772
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-15T08:00:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationProfile"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Profile/vehicle/{VehicleID}:
    get:
      tags:
        - IOperationWebService
      summary:  GetOperationProfileByVehicleId
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: f8e99bbf-40c4-4d79-b4f2-5f64ac999b82
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-15T08:00:00Z
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationProfile"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Profile/driver/{DriverID}:
    get:
      tags:
        - IOperationWebService
      summary:  GetOperationProfileByDriverId
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: a4f1a9c8-912f-4e21-8b69-33065d74e93c
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-15T08:00:00Z
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationProfile"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /JurisdictionCrossings/:
    get:
      tags:
        - IIFTAWebService
      summary:  GetAllJurisdictionCrossings
      parameters:
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: a8c957b6-1c0b-4e3e-bd3c-7aef6efb1234
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T00:00:00Z
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T23:59:59Z
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T12:00:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JurisdictionCrossing"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /JurisdictionCrossings/{vehicleId}:
    get:
      tags:
        - IIFTAWebService
      summary:  GetJurisdictionCrossingsByVehicleId
      parameters:
          - name: vehicleId
            in: path
            required: true
            schema:
              type: "string"
            example: b6f957b6-1c0b-4e3e-bd3c-7aef6efb5678
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T00:00:00Z
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T23:59:59Z
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T12:00:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JurisdictionCrossing"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /FuelReceipts/:
    get:
      tags:
        - IIFTAWebService
      summary:  GetAllFuelReceipts
      parameters:
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: c1f957b6-1c0b-4e3e-bd3c-7aef6efb9102
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T12:00:00Z
          - name: stateProvince
            in: query
            required: False
            schema:
              type: "string"
            example: CA
          - name: vendor
            in: query
            required: False
            schema:
              type: "string"
            example: FuelVendor123
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuelReceipt"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /FuelReceipts/{vehicleId}:
    get:
      tags:
        - IIFTAWebService
      summary:  GetFuelReceiptsByVehicleId
      parameters:
          - name: vehicleId
            in: path
            required: true
            schema:
              type: "string"
            example: d2f957b6-1c0b-4e3e-bd3c-7aef6efb3333
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T12:00:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuelReceipt"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /FuelReceipts:
    post:
      tags:
        - IIFTAWebService
      summary:  AddFuelReceipts
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/FuelReceipt"
          application/json:
            schema:
              $ref: "#/components/schemas/FuelReceipt"
          text/json:
            schema:
              $ref: "#/components/schemas/FuelReceipt"
          application/*+json:
            schema:
              $ref: "#/components/schemas/FuelReceipt"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Distances/:
    get:
      tags:
        - IIFTAWebService
      summary:  GetDistances
      parameters:
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: e4f957b6-1c0b-4e3e-bd3c-7aef6efb4444
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T12:00:00Z
          - name: stateProvince
            in: query
            required: False
            schema:
              type: "string"
            example: TX
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IFTADistance"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Distances/{vehicleId}:
    get:
      tags:
        - IIFTAWebService
      summary:  GetDistancesByVehicleId
      parameters:
          - name: vehicleId
            in: path
            required: true
            schema:
              type: "string"
            example: f5f957b6-1c0b-4e3e-bd3c-7aef6efb5555
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T12:00:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IFTADistance"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Distances:
    post:
      tags:
        - IIFTAWebService
      summary:  AddDistances
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/IFTADistance"
          application/json:
            schema:
              $ref: "#/components/schemas/IFTADistance"
          text/json:
            schema:
              $ref: "#/components/schemas/IFTADistance"
          application/*+json:
            schema:
              $ref: "#/components/schemas/IFTADistance"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DVIR/:
    get:
      tags:
        - IDVIRWebService
      summary:  GetAllDVIR
      parameters:
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: 54
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-03-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-03-15 16:00:46.356
          - name: driverId
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: assetType
            in: query
            required: False
            schema:
              type: "string"
            example: Battery
          - name: defectsOnly
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: includeNonDefects
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DVIR"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DVIR/vehicle/{vehicleId}:
    get:
      tags:
        - IDVIRWebService
      summary:  GetDVIRByVehicleId
      parameters:
          - name: vehicleId
            in: path
            required: true
            schema:
              type: "string"
            example: 47
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: 54
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-03-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-03-15 16:00:46.356
          - name: driverId
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: defectsOnly
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: includeNonDefects
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DVIR"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DVIR/trailer/{trailerId}:
    get:
      tags:
        - IDVIRWebService
      summary:  GetDVIRByTrailerId
      parameters:
          - name: trailerId
            in: path
            required: true
            schema:
              type: "string"
            example: 7
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: 54
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-03-15 16:00:46.356
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-03-15 16:00:46.356
          - name: driverId
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: defectsOnly
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: includeNonDefects
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DVIR"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DVIR/certify:
    put:
      tags:
        - IDVIRWebService
      summary:  CertifyRepair
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/InspectionDefects"
          application/json:
            schema:
              $ref: "#/components/schemas/InspectionDefects"
          text/json:
            schema:
              $ref: "#/components/schemas/InspectionDefects"
          application/*+json:
            schema:
              $ref: "#/components/schemas/InspectionDefects"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DVIR/repair:
    put:
      tags:
        - IDVIRWebService
      summary:  AddRepairs
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/RepairInfo"
          application/json:
            schema:
              $ref: "#/components/schemas/RepairInfo"
          text/json:
            schema:
              $ref: "#/components/schemas/RepairInfo"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RepairInfo"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /FaultCodes/:
    get:
      tags:
        - IFaultCodeWebService
      summary:  GetAllFaultCodes
      parameters:
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: 550e8400-e29b-41d4-a716-446655440000
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T12:00:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetFaultCode"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /FaultCodes/vehicle/{VehicleID}:
    get:
      tags:
        - IFaultCodeWebService
      summary:  GetFaultCodesByVehicleId
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T12:00:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetFaultCode"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/vehicles/stoparrival/{VehicleSID}:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopArrivalAlertByVehicleSID
      parameters:
          - name: VehicleSID
            in: path
            required: true
            schema:
              type: "string"
            example: 213
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopArrivalAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/stoparrival/{DriverSID}:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopArrivalAlertByDriverSID
      parameters:
          - name: DriverSID
            in: path
            required: true
            schema:
              type: "string"
            example: 443
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopArrivalAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/vehicles/stoparrival/:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopArrivalAllVehicleAlert
      parameters:
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T12:00:00Z
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-03-01T08:00:00Z
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T12:00:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopArrivalAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/stoparrival/:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopArrivalAllDriverAlert
      parameters:
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T10:30:00
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T09:00:00
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T11:00:00
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopArrivalAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/vehicles/stopdeparture/{VehicleSID}:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopDepartureAlertByVehicleSID
      parameters:
          - name: VehicleSID
            in: path
            required: true
            schema:
              type: "string"
            example: 76
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDepartureAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/stopdeparture/{DriverSID}:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopDepartureAlertByDriverSID
      parameters:
          - name: DriverSID
            in: path
            required: true
            schema:
              type: "string"
            example: 87
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDepartureAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/vehicles/stopdeparture/:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopDepartureAllVehicleAlert
      parameters:
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T10:30:00
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T09:00:00
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T11:00:00
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDepartureAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/stopdeparture/:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopDepartureAllDriverAlert
      parameters:
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T10:30:00
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T09:00:00
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T11:00:00
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDepartureAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/vehicles/stopdetention/{VehicleSID}:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopDetentionAlertByVehicleSID
      parameters:
          - name: VehicleSID
            in: path
            required: true
            schema:
              type: "string"
            example: 294
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDetentionAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/stopdetention/{DriverSID}:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopDetentionAlertByDriverSID
      parameters:
          - name: DriverSID
            in: path
            required: true
            schema:
              type: "string"
            example: 342
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDetentionAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/vehicles/stopdetention/:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopDetentionAllVehicleAlert
      parameters:
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T10:30:00
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T09:00:00
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T11:00:00
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDetentionAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/stopdetention/:
    get:
      tags:
        - IAlertWebService
      summary:  GetStopDetentionAllDriverAlert
      parameters:
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T10:30:00
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T09:00:00
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-04-01T11:00:00
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDetentionAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/login/{DriverSID}:
    get:
      tags:
        - IAlertWebService
      summary:  GetDriverLoginAlertByDriverSID
      parameters:
          - name: DriverSID
            in: path
            required: true
            schema:
              type: "string"
            example: 346
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLoginAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/logout/{DriverSID}:
    get:
      tags:
        - IAlertWebService
      summary:  GetDriverLogoutAlertByDriverSID
      parameters:
          - name: DriverSID
            in: path
            required: true
            schema:
              type: "string"
            example: 678
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogoutAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/login/:
    get:
      tags:
        - IAlertWebService
      summary:  GetAllDriverLoginAlert
      parameters:
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-05-15T14:45:00
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-05-15T08:30:00
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-05-15T16:00:00
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 20
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLoginAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/drivers/logout/:
    get:
      tags:
        - IAlertWebService
      summary:  GetAllDriverLogoutAlert
      parameters:
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-06-01T09:00:00
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-06-01T06:00:00
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-06-01T18:00:00
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogoutAlert"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /alerts/:
    put:
      tags:
        - IAlertWebService
      summary:  PutAlert
      requestBody:
        content:
          application/json-patch+json:
            schema:
                type: array
                items: 
                  type: string
                  format: uuid
          application/json:
            schema:
                type: array
                items: 
                  type: string
                  format: uuid
          text/json:
            schema:
                type: array
                items: 
                  type: string
                  format: uuid
          application/*+json:
            schema:
                type: array
                items: 
                  type: string
                  format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /driverlog/:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetAllDriverLog
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: edits
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLog"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /driverlog/{DriverID}:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetDriverLogById
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: 54
          - name: edits
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLog"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /driverlogdetails/:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetAllModifiedDriverLog
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogModified"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /driverlogdetails/{DriverID}:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetModifiedDriverLogById
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: 17
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogModified"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/driverlogdetails/:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetAllModifiedDriverLogV2
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogModifiedV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    post:
      tags:
        - IDriverLogWebService
      summary:  AddDriverLogDetails
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/DriverLogDetailModifiedV2"
          application/json:
            schema:
              $ref: "#/components/schemas/DriverLogDetailModifiedV2"
          text/json:
            schema:
              $ref: "#/components/schemas/DriverLogDetailModifiedV2"
          application/*+json:
            schema:
              $ref: "#/components/schemas/DriverLogDetailModifiedV2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IDriverLogWebService
      summary:  UpdateDriverLogDetails
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/DriverLogDetailModifiedV2"
          application/json:
            schema:
              $ref: "#/components/schemas/DriverLogDetailModifiedV2"
          text/json:
            schema:
              $ref: "#/components/schemas/DriverLogDetailModifiedV2"
          application/*+json:
            schema:
              $ref: "#/components/schemas/DriverLogDetailModifiedV2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/driverlogdetails/{DriverID}:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetModifiedDriverLogByIdV2
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: 17
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogModifiedV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v3/driverlog/:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetAllDriverLogV3
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: edits
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: isactive
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogV3"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v3/driverlog/{driverID}:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetDriverLogByIdV3
      parameters:
          - name: driverID
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: edits
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogV3"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v4/driverlog/:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetAllDriverLogV4
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: edits
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogV4"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v4/driverlog/{DriverID}:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetDriverLogByIdV4
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: 10
          - name: edits
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogV4"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v4/driverlogdetails/:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetAllModifiedDriverLogV4
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogModifiedV4"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v4/driverlogdetails/{DriverID}:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetModifiedDriverLogByIdV4
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: 17
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogModifiedV4"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v5/driverlog/:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetAllDriverLogV5
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: ORG15
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: edits
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: driverLimit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: driverOffset
            in: query
            required: False
            schema:
              type: "string"
            example: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogV5"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v5/driverlog/{DriverID}:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetDriverLogByIdV5
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: 2
          - name: edits
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: annotation
            in: query
            required: False
            schema:
              type: "string"
            example: Annotations
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-06-30 14:50:45
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogV5"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v5/driverlogdetails/:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetAllModifiedDriverLogV5
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: driverLimit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: driverOffset
            in: query
            required: False
            schema:
              type: "string"
            example: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogModifiedV5"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v5/driverlogdetails/{DriverID}:
    get:
      tags:
        - IDriverLogWebService
      summary:  GetModifiedDriverLogByIdV5
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: DR2
          - name: annotation
            in: query
            required: False
            schema:
              type: "string"
            example: Annotations
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverLogModifiedV5"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /driverstatus/{DriverSID}:
    get:
      tags:
        - IDriverStatusWebService
      summary:  GetDriverStatusById
      parameters:
          - name: DriverSID
            in: path
            required: true
            schema:
              type: "string"
            example: 135
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: events
            in: query
            required: False
            schema:
              type: "string"
            example: CoDriver
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /driversstatus/:
    get:
      tags:
        - IDriverStatusWebService
      summary:  GetDriversStatusBySIDs
      parameters:
          - name: driverSIDs
            in: query
            required: False
            schema:
              type: "string"
            example: 135
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: events
            in: query
            required: False
            schema:
              type: "string"
            example: CoDriver
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /driverstate/{DriverID}:
    get:
      tags:
        - IDriverStatusWebService
      summary:  GetDriverStatus
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: Driver135
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: events
            in: query
            required: False
            schema:
              type: "string"
            example: CoDriver
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /driverstatus/:
    get:
      tags:
        - IDriverStatusWebService
      summary:  GetAllDriverStatus
      parameters:
          - name: organizationSID
            in: query
            required: False
            schema:
              type: "string"
            example: 8476
          - name: resourceGroupSID
            in: query
            required: False
            schema:
              type: "string"
            example: 22
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: options
            in: query
            required: False
            schema:
              type: "string"
            example: String
          - name: events
            in: query
            required: False
            schema:
              type: "string"
            example: CoDriver
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DriverStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehiclebreadcrumb/{VehicleSID}:
    get:
      tags:
        - IVehicleBreadcrumbWebService
      summary:  GetVehicleBreadcrumbById
      parameters:
          - name: VehicleSID
            in: path
            required: true
            schema:
              type: "string"
            example: e3f957b6-1c0b-4e3e-bd3c-7aef6efb3772
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T08:00:00Z
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T00:00:00Z
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T23:59:59Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleBreadcrumb"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehiclebreadcrumbs/{VehicleID}:
    get:
      tags:
        - IVehicleBreadcrumbWebService
      summary:  GetVehicleBreadcrumb
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: b6f957b6-1c0b-4e3e-bd3c-7aef6efb1234
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T08:00:00Z
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T00:00:00Z
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T23:59:59Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleBreadcrumb"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehiclebreadcrumb/:
    get:
      tags:
        - IVehicleBreadcrumbWebService
      summary:  GetAllVehicleBreadcrumb
      parameters:
          - name: organizationSID
            in: query
            required: False
            schema:
              type: "string"
            example: a1c957b6-1c0b-4e3e-bd3c-7aef6efb5678
          - name: resourceGroupSID
            in: query
            required: False
            schema:
              type: "string"
            example: d1f957b6-1c0b-4e3e-bd3c-7aef6efb7890
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T08:00:00Z
          - name: startDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T00:00:00Z
          - name: endDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-07T23:59:59Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: b1f957b6-1c0b-4e3e-bd3c-7aef6efb0001
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: c1f957b6-1c0b-4e3e-bd3c-7aef6efb2222
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleBreadcrumb"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehiclestatus/{VehicleSID}:
    get:
      tags:
        - IVehicleStatusWebService
      summary:  GetVehicleStatusById
      parameters:
          - name: VehicleSID
            in: path
            required: true
            schema:
              type: "string"
            example: 874
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehiclestate/{VehicleID}:
    get:
      tags:
        - IVehicleStatusWebService
      summary:  GetVehicleStatus
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: VH138
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehiclestatus/:
    get:
      tags:
        - IVehicleStatusWebService
      summary:  GetAllVehicleStatus
      parameters:
          - name: organizationSID
            in: query
            required: False
            schema:
              type: "string"
            example: 8476
          - name: resourceGroupSID
            in: query
            required: False
            schema:
              type: "string"
            example: 22
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-04-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleStatus"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /carrier/{carrierIdentity}:
    patch:
      tags:
        - IMotorCarrierWebService
      summary:  PatchCarrier
      parameters:
          - name: carrierIdentity
            in: path
            required: true
            schema:
              type: "string"
            example: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MotorCarrierResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IMotorCarrierWebService
      summary:  DeleteCarrier
      parameters:
          - name: carrierIdentity
            in: path
            required: true
            schema:
              type: "string"
            example: 
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MotorCarrierResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /carrier/byId/{carrierIdentity}:
    get:
      tags:
        - IMotorCarrierWebService
      summary:  GetCarrierByIdentity
      parameters:
          - name: carrierIdentity
            in: path
            required: true
            schema:
              type: "string"
            example: 
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MotorCarrier"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /carrier/bySid/{carrierSID}:
    get:
      tags:
        - IMotorCarrierWebService
      summary:  GetCarrierBySID
      parameters:
          - name: carrierSID
            in: path
            required: true
            schema:
              type: "string"
            example: 
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MotorCarrier"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /carriers:
    post:
      tags:
        - IMotorCarrierWebService
      summary:  PostCarriers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/MotorCarrier"
          application/json:
            schema:
              $ref: "#/components/schemas/MotorCarrier"
          text/json:
            schema:
              $ref: "#/components/schemas/MotorCarrier"
          application/*+json:
            schema:
              $ref: "#/components/schemas/MotorCarrier"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MotorCarrierResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IMotorCarrierWebService
      summary:  PutCarriers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/MotorCarrier"
          application/json:
            schema:
              $ref: "#/components/schemas/MotorCarrier"
          text/json:
            schema:
              $ref: "#/components/schemas/MotorCarrier"
          application/*+json:
            schema:
              $ref: "#/components/schemas/MotorCarrier"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MotorCarrierResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /carriers/byCompanyId/{carrierCompanyIdentity}:
    get:
      tags:
        - IMotorCarrierWebService
      summary:  GetCarriersByCompanyIdentity
      parameters:
          - name: carrierCompanyIdentity
            in: path
            required: true
            schema:
              type: "string"
            example: 
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MotorCarrier"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /carriers/byId/{carrierIdentity}:
    get:
      tags:
        - IMotorCarrierWebService
      summary:  GetCarriersByIdentity
      parameters:
          - name: carrierIdentity
            in: path
            required: true
            schema:
              type: "string"
            example: 
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MotorCarrier"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DailyDetail:
    get:
      tags:
        - IDailyDetailWebService
      summary:  GetDailyDetail
      parameters:
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: 550e8400-e29b-41d4-a716-446655440000
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T12:00:00Z
          - name: resourceGroupId
            in: query
            required: False
            schema:
              type: "string"
            example: 123e4567-e89b-12d3-a456-426614174000
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 10
          - name: groupBy
            in: query
            required: False
            schema:
              type: "string"
            example: Day
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyDetail"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DailyDetail/vehicles/{vehicleId}/:
    get:
      tags:
        - IDailyDetailWebService
      summary:  GetDailyDetailByVehicle
      parameters:
          - name: vehicleId
            in: path
            required: true
            schema:
              type: "string"
            example: 550e8400-e29b-41d4-a716-446655440000
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T12:00:00Z
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyDetail"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /DailyDetail/drivers/{driverId}/:
    get:
      tags:
        - IDailyDetailWebService
      summary:  GetDailyDetailByDriver
      parameters:
          - name: driverId
            in: path
            required: true
            schema:
              type: "string"
            example: 123e4567-e89b-12d3-a456-426614174000
          - name: startDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01
          - name: endDate
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T12:00:00Z
          - name: includeHistory
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyDetail"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /delay:
    get:
      tags:
        - IDelayWebService
      summary:  GetDelayByOrgID
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 3f9b6d6a-82e7-4c5d-bc77-8a91f9a4d1f3
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Delay"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /delay/{orgnizationID}/{delayName}:
    get:
      tags:
        - IDelayWebService
      summary:  GetDelayByOrgIDAndDelayName
      parameters:
          - name: orgnizationID
            in: path
            required: true
            schema:
              type: "string"
            example: e8f1c2d3-6a45-4b79-b0c9-2d7f8e3a9c12
          - name: delayName
            in: path
            required: true
            schema:
              type: "string"
            example: Mechanical Failure
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Delay"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /device/{phoneNumber}:
    patch:
      tags:
        - IDeviceWebService
      summary:  PatchDevices
      parameters:
          - name: phoneNumber
            in: path
            required: true
            schema:
              type: "string"
            example: +1 (415) 555-1234)
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /device/{PhoneNumber}:
    get:
      tags:
        - IDeviceWebService
      summary:  GetDevice
      parameters:
          - name: PhoneNumber
            in: path
            required: true
            schema:
              type: "string"
            example: +1 (415) 555-8089)
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IDeviceWebService
      summary:  DeleteDevice
      parameters:
          - name: PhoneNumber
            in: path
            required: true
            schema:
              type: "string"
            example: +1 (415) 555-5968)
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /devices:
    post:
      tags:
        - IDeviceWebService
      summary:  PostDevices
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Device"
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
          text/json:
            schema:
              $ref: "#/components/schemas/Device"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Device"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IDeviceWebService
      summary:  PutDevices
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Device"
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
          text/json:
            schema:
              $ref: "#/components/schemas/Device"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Device"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /devices/:
    get:
      tags:
        - IDeviceWebService
      summary:  GetDevices
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 550e8400-e29b-41d4-a716-446655440000
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 3f2504e0-4f89-11d3-9a0c-0305e82c3301
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-12-05T15:30:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /organization/{SID}:
    get:
      tags:
        - IOrganizationWebService
      summary:  GetOrganization
      parameters:
          - name: SID
            in: path
            required: true
            schema:
              type: "string"
            example: 125
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /organizations:
    post:
      tags:
        - IOrganizationWebService
      summary:  PostOrganizations
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
          text/json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /organizations/:
    get:
      tags:
        - IOrganizationWebService
      summary:  GetAll
      parameters:
          - name: organizationSid
            in: query
            required: False
            schema:
              type: "string"
            example: 45
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-16T14:23:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 123
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: 3f2504e0-4f89-11d3-9a0c-0305e82c3301
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /organizations/{ID}:
    get:
      tags:
        - IOrganizationWebService
      summary:  GetOrganizationById
      parameters:
          - name: ID
            in: path
            required: true
            schema:
              type: "string"
            example: 125
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    patch:
      tags:
        - IOrganizationWebService
      summary:  PatchOrganization
      parameters:
          - name: ID
            in: path
            required: true
            schema:
              type: "string"
            example: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /organizations/{ID}/performance:
    get:
      tags:
        - IOrganizationWebService
      summary:  GetPerformanceSettingsByOrgId
      parameters:
          - name: ID
            in: path
            required: true
            schema:
              type: "string"
            example: d8406b12-7d3c-48ef-98c3-5f7bcb22a35f
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerformanceSettings"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IOrganizationWebService
      summary:  UpdatePerformanceSettings
      parameters:
          - name: ID
            in: path
            required: true
            schema:
              type: "string"
            example: 3f2504e0-4f89-11d3-9a0c-0305e82c3301
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OrganizationSetting"
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationSetting"
          text/json:
            schema:
              $ref: "#/components/schemas/OrganizationSetting"
          application/*+json:
            schema:
              $ref: "#/components/schemas/OrganizationSetting"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /organizations/performance/:
    get:
      tags:
        - IOrganizationWebService
      summary:  GetAllPerformanceSettings
      parameters:
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: 3f2504e0-4f89-11d3-9a0c-0305e82c3301
          - name: resourceGroupId
            in: query
            required: False
            schema:
              type: "string"
            example: 7b5a68c8-9c0b-4e2a-b22d-2b4e66ea047f
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-07-10T11:45:30
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 10
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerformanceSettings"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /organizations/update:
    put:
      tags:
        - IOrganizationWebService
      summary:  UpdateOrganizations
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
          text/json:
            schema:
              $ref: "#/components/schemas/Organization"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /resourcegroups/:
    get:
      tags:
        - IResourceGroupWebService
      summary:  GetResourceGroups
      parameters:
          - name: organizationSID
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: resourceGroupSID
            in: query
            required: False
            schema:
              type: "string"
            example: 2
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-05-30 14:50:45
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: e3757138-011d-404f-b134-adeeee45b7b2
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: e3757138-011d-404f-b134-adeeee45b7b2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroup"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /resourcegroups/{ResourceGroupSid}:
    get:
      tags:
        - IResourceGroupWebService
      summary:  GetResourceGroup
      parameters:
          - name: ResourceGroupSid
            in: path
            required: true
            schema:
              type: "string"
            example: 2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroup"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /resourcegroup/{ResourceGroupId}:
    get:
      tags:
        - IResourceGroupWebService
      summary:  GetResourceGroupById
      parameters:
          - name: ResourceGroupId
            in: path
            required: true
            schema:
              type: "string"
            example: 2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroup"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /route:
    get:
      tags:
        - IRouteWebService
      summary:  GetRoutes
      parameters:
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: e83a77bd-8a4e-4b22-91c3-f9b9c92f6d52
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: g29c77aa-5b34-4e77-91d1-2f3c1234abcd
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-02T10:45:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 10
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /route/{organizationID}/{routeID}:
    get:
      tags:
        - IRouteWebService
      summary:  GetRouteShellByID
      parameters:
          - name: organizationID
            in: path
            required: true
            schema:
              type: "string"
            example: b1a88c6f-f8d7-441b-b1a7-4c3be5c2f5da
          - name: routeID
            in: path
            required: true
            schema:
              type: "string"
            example: a3e9f0fd-5509-4e4a-a937-7b85c3b78ffb
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IRouteWebService
      summary:  DeleteRouteShellByID
      parameters:
          - name: organizationID
            in: path
            required: true
            schema:
              type: "string"
            example: e34f8b57-9f7a-4028-8c32-62c3b39b324d
          - name: routeID
            in: path
            required: true
            schema:
              type: "string"
            example: b46f1a2b-bb42-45f2-94f3-6c2e1fbbd3a7
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /route/{organizationID}/{routeID}/{tripID}:
    get:
      tags:
        - IRouteWebService
      summary:  GetRouteByID
      parameters:
          - name: organizationID
            in: path
            required: true
            schema:
              type: "string"
            example: b92c9c1e-2d93-4d97-9f60-72e75d8b0a28
          - name: routeID
            in: path
            required: true
            schema:
              type: "string"
            example: d1f0e1b6-3c39-4d9a-bc7b-bc6e740de1ff
          - name: tripID
            in: path
            required: true
            schema:
              type: "string"
            example: a94be5d9-d3a9-42b4-b431-c0d5b7051f35
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IRouteWebService
      summary:  DeleteRouteByID
      parameters:
          - name: organizationID
            in: path
            required: true
            schema:
              type: "string"
            example: e34f8b57-9f7a-4028-8c32-62c3b39b324d
          - name: routeID
            in: path
            required: true
            schema:
              type: "string"
            example: b46f1a2b-bb42-45f2-94f3-6c2e1fbbd3a7
          - name: tripID
            in: path
            required: true
            schema:
              type: "string"
            example: a3e5d637-9c2e-44fd-bcc6-5b74e9e48a1f
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Routes:
    post:
      tags:
        - IRouteWebService
      summary:  PostRoutes
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Route"
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
          text/json:
            schema:
              $ref: "#/components/schemas/Route"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Route"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IRouteWebService
      summary:  PutRoutes
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Route"
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
          text/json:
            schema:
              $ref: "#/components/schemas/Route"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Route"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/route:
    get:
      tags:
        - IRouteWebService
      summary:  GetRoutesV2
      parameters:
          - name: organizationId
            in: query
            required: False
            schema:
              type: "string"
            example: 6e370f75-75a9-4b56-a953-b91d2b578f32
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: a1b2c3d4-e5f6-7890-abc1-d23e4f5g6h7i
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-03-15T10:30:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 20
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/route/{organizationID}/{routeID}:
    get:
      tags:
        - IRouteWebService
      summary:  GetRouteShellByIDV2
      parameters:
          - name: organizationID
            in: path
            required: true
            schema:
              type: "string"
            example: b1a88c6f-f8d7-441b-b1a7-4c3be5c2f5da
          - name: routeID
            in: path
            required: true
            schema:
              type: "string"
            example: a3e9f0fd-5509-4e4a-a937-7b85c3b78ffb
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/route/{organizationID}/{routeID}/{tripID}:
    get:
      tags:
        - IRouteWebService
      summary:  GetRouteByIDV2
      parameters:
          - name: organizationID
            in: path
            required: true
            schema:
              type: "string"
            example: 9f3c8c8a-9f8a-4f33-98a9-729b47c2e8e6
          - name: routeID
            in: path
            required: true
            schema:
              type: "string"
            example: c8d3c759-75e1-4a4f-bf6f-c42a99f5f3fe
          - name: tripID
            in: path
            required: true
            schema:
              type: "string"
            example: bfe2a32a-13fb-4b3a-90d3-f31f52072c91
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/Routes:
    post:
      tags:
        - IRouteWebService
      summary:  PostRoutesV2
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/RouteV2"
          application/json:
            schema:
              $ref: "#/components/schemas/RouteV2"
          text/json:
            schema:
              $ref: "#/components/schemas/RouteV2"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RouteV2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IRouteWebService
      summary:  PutRoutesV2
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/RouteV2"
          application/json:
            schema:
              $ref: "#/components/schemas/RouteV2"
          text/json:
            schema:
              $ref: "#/components/schemas/RouteV2"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RouteV2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /sites:
    post:
      tags:
        - ISiteWebService
      summary:  PostSites
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Site"
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
          text/json:
            schema:
              $ref: "#/components/schemas/Site"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Site"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - ISiteWebService
      summary:  PutSites
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Site"
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
          text/json:
            schema:
              $ref: "#/components/schemas/Site"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Site"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /sites/:
    get:
      tags:
        - ISiteWebService
      summary:  GetSites
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: b1e3f7d9-bc9f-47b4-89f7-2bda5b194e6b
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: a35a0403-bd6d-4388-b4e1-19f3f3b1d1fc
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-12-05T14:30:00
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 20
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /sites/{SiteID}:
    get:
      tags:
        - ISiteWebService
      summary:  GetSite
      parameters:
          - name: SiteID
            in: path
            required: true
            schema:
              type: "string"
            example: d9b2d63d-9c9f-42b3-ae67-ea32d38b3b90
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    patch:
      tags:
        - ISiteWebService
      summary:  PatchSite
      parameters:
          - name: SiteID
            in: path
            required: true
            schema:
              type: "string"
            example: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - ISiteWebService
      summary:  DeleteSite
      parameters:
          - name: SiteID
            in: path
            required: true
            schema:
              type: "string"
            example: f4a6c5b2-5c2f-4d2e-b739-08b3a6291d23
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/sites:
    post:
      tags:
        - ISiteWebService
      summary:  PostSitesV2
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/SiteV2"
          application/json:
            schema:
              $ref: "#/components/schemas/SiteV2"
          text/json:
            schema:
              $ref: "#/components/schemas/SiteV2"
          application/*+json:
            schema:
              $ref: "#/components/schemas/SiteV2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - ISiteWebService
      summary:  PutSitesV2
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/SiteV2"
          application/json:
            schema:
              $ref: "#/components/schemas/SiteV2"
          text/json:
            schema:
              $ref: "#/components/schemas/SiteV2"
          application/*+json:
            schema:
              $ref: "#/components/schemas/SiteV2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/sites/:
    get:
      tags:
        - ISiteWebService
      summary:  GetSitesV2
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: d4e9f6c1-4d8a-4d2f-b8a1-0c9c44d2e5c7
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 7a34b85f-5c27-4f30-9291-bf963264cbcb
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-11-18T09:45:30
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 20
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/sites/{SiteID}:
    get:
      tags:
        - ISiteWebService
      summary:  GetSiteV2
      parameters:
          - name: SiteID
            in: path
            required: true
            schema:
              type: "string"
            example: 9c1c5c17-1e6b-47c9-9e91-4b2b4c3851f5
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    patch:
      tags:
        - ISiteWebService
      summary:  PatchSiteV2
      parameters:
          - name: SiteID
            in: path
            required: true
            schema:
              type: "string"
            example: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Company:
    post:
      tags:
        - ISubscriptionWebService
      summary:  AddCompany
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CRMCompanyPackageInfo"
          application/json:
            schema:
              $ref: "#/components/schemas/CRMCompanyPackageInfo"
          text/json:
            schema:
              $ref: "#/components/schemas/CRMCompanyPackageInfo"
          application/*+json:
            schema:
              $ref: "#/components/schemas/CRMCompanyPackageInfo"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - ISubscriptionWebService
      summary:  UpdateCompany
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CRMCompany"
          application/json:
            schema:
              $ref: "#/components/schemas/CRMCompany"
          text/json:
            schema:
              $ref: "#/components/schemas/CRMCompany"
          application/*+json:
            schema:
              $ref: "#/components/schemas/CRMCompany"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Company/{companyId}:
    put:
      tags:
        - ISubscriptionWebService
      summary:  InActiveCompany
      parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: "string"
            example: b3f5a8c6-79d2-4e3f-8d6a-91c3e7b27f44
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /Subscriptions/{netSuiteCompanyId}:
    put:
      tags:
        - ISubscriptionWebService
      summary:  UpdateSubscription
      parameters:
          - name: netSuiteCompanyId
            in: path
            required: true
            schema:
              type: "string"
            example: f8c2e7a1-4d3b-4969-b9e5-27a1c6f07d8f
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CRMPackage"
          application/json:
            schema:
              $ref: "#/components/schemas/CRMPackage"
          text/json:
            schema:
              $ref: "#/components/schemas/CRMPackage"
          application/*+json:
            schema:
              $ref: "#/components/schemas/CRMPackage"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /trailer/{trailerID}:
    get:
      tags:
        - ITrailerWebService
      summary:  GetTrailerByTrailerID
      parameters:
          - name: trailerID
            in: path
            required: true
            schema:
              type: "string"
            example: TRLR9087
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trailer"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /trailer/{TrailerID}:
    patch:
      tags:
        - ITrailerWebService
      summary:  PatchTrailer
      parameters:
          - name: TrailerID
            in: path
            required: true
            schema:
              type: "string"
            example: TRLR9087
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - ITrailerWebService
      summary:  DeleteTrailer
      parameters:
          - name: TrailerID
            in: path
            required: true
            schema:
              type: "string"
            example: TRLR9087
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /trailers:
    get:
      tags:
        - ITrailerWebService
      summary:  GetTrailerList
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: status
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-03-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trailer"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    post:
      tags:
        - ITrailerWebService
      summary:  PostTrailers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Trailer"
          application/json:
            schema:
              $ref: "#/components/schemas/Trailer"
          text/json:
            schema:
              $ref: "#/components/schemas/Trailer"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Trailer"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - ITrailerWebService
      summary:  PutTrailers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Trailer"
          application/json:
            schema:
              $ref: "#/components/schemas/Trailer"
          text/json:
            schema:
              $ref: "#/components/schemas/Trailer"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Trailer"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/trailer/{trailerId}:
    get:
      tags:
        - ITrailerWebService
      summary:  GetTrailerByTrailerIdV2
      parameters:
          - name: trailerId
            in: path
            required: true
            schema:
              type: "string"
            example: TRLR9087
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrailerV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/trailer/{TrailerID}:
    patch:
      tags:
        - ITrailerWebService
      summary:  PatchTrailerV2
      parameters:
          - name: TrailerID
            in: path
            required: true
            schema:
              type: "string"
            example: TRLR9087
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /v2/trailers:
    get:
      tags:
        - ITrailerWebService
      summary:  GetTrailerListV2
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: status
            in: query
            required: False
            schema:
              type: "string"
            example: 1
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-03-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrailerV2"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    post:
      tags:
        - ITrailerWebService
      summary:  PostTrailersV2
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/TrailerV2"
          application/json:
            schema:
              $ref: "#/components/schemas/TrailerV2"
          text/json:
            schema:
              $ref: "#/components/schemas/TrailerV2"
          application/*+json:
            schema:
              $ref: "#/components/schemas/TrailerV2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - ITrailerWebService
      summary:  PutTrailersV2
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/TrailerV2"
          application/json:
            schema:
              $ref: "#/components/schemas/TrailerV2"
          text/json:
            schema:
              $ref: "#/components/schemas/TrailerV2"
          application/*+json:
            schema:
              $ref: "#/components/schemas/TrailerV2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /trip:
    get:
      tags:
        - ITripWebService
      summary:  GetTrips
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: fd9c16f3-c29b-4cd5-8a2c-7365bc3bb645
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: a2c316f5-c992-43e2-b50a-b7c8ec1f7b98
          - name: routeID
            in: query
            required: False
            schema:
              type: "string"
            example: 8a7fbac1-853b-4628-b9be-34a18ff3c0fe
          - name: tripID
            in: query
            required: False
            schema:
              type: "string"
            example: 50304a6e-3d7b-4236-9b61-32e5fd4b2578
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-02-01T10:00:00Z
          - name: fromDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T00:00:00Z
          - name: toDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31T23:59:59Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 50
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    post:
      tags:
        - ITripWebService
      summary:  PostTrips
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Trip"
          application/json:
            schema:
              $ref: "#/components/schemas/Trip"
          text/json:
            schema:
              $ref: "#/components/schemas/Trip"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Trip"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /trip/{organizationID}/{routeID}/{tripID}:
    get:
      tags:
        - ITripWebService
      summary:  GetTripByTripID
      parameters:
          - name: organizationID
            in: path
            required: true
            schema:
              type: "string"
            example: fd9c16f3-c29b-4cd5-8a2c-7365bc3bb645
          - name: routeID
            in: path
            required: true
            schema:
              type: "string"
            example: 8a7fbac1-853b-4628-b9be-34a18ff3c0fe
          - name: tripID
            in: path
            required: true
            schema:
              type: "string"
            example: 50304a6e-3d7b-4236-9b61-32e5fd4b2578
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /trip/{organizationID}/{routeID}/{TripID}:
    delete:
      tags:
        - ITripWebService
      summary:  DeleteTrip
      parameters:
          - name: organizationID
            in: path
            required: true
            schema:
              type: "string"
            example: fd9c16f3-c29b-4cd5-8a2c-7365bc3bb645
          - name: routeID
            in: path
            required: true
            schema:
              type: "string"
            example: 8a7fbac1-853b-4628-b9be-34a18ff3c0fe
          - name: TripID
            in: path
            required: true
            schema:
              type: "string"
            example: 50304a6e-3d7b-4236-9b61-32e5fd4b2578
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /tripV2:
    get:
      tags:
        - ITripWebService
      summary:  GetTripsV2
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: fd9c16f3-c29b-4cd5-8a2c-7365bc3bb645
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: a2c316f5-c992-43e2-b50a-b7c8ec1f7b98
          - name: routeID
            in: query
            required: False
            schema:
              type: "string"
            example: 8a7fbac1-853b-4628-b9be-34a18ff3c0fe
          - name: tripID
            in: query
            required: False
            schema:
              type: "string"
            example: 50304a6e-3d7b-4236-9b61-32e5fd4b2578
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-02-01T10:00:00Z
          - name: fromDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-01T00:00:00Z
          - name: toDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-01-31T23:59:59Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: tripStatus
            in: query
            required: False
            schema:
              type: "string"
            example: Completed
          - name: stopStatus
            in: query
            required: False
            schema:
              type: "string"
            example: Active
          - name: changesOnly
            in: query
            required: False
            schema:
              type: "string"
            example: false
          - name: recurse
            in: query
            required: False
            schema:
              type: "string"
            example: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /users:
    post:
      tags:
        - IUserWebService
      summary:  PostUsers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/User"
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          text/json:
            schema:
              $ref: "#/components/schemas/User"
          application/*+json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IUserWebService
      summary:  PutUsers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/User"
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          text/json:
            schema:
              $ref: "#/components/schemas/User"
          application/*+json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /users/:
    get:
      tags:
        - IUserWebService
      summary:  GetUsers
      parameters:
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 54
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 5
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-03-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /users/{UserID}:
    get:
      tags:
        - IUserWebService
      summary:  GetUser
      parameters:
          - name: UserID
            in: path
            required: true
            schema:
              type: "string"
            example: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    patch:
      tags:
        - IUserWebService
      summary:  PatchUsers
      parameters:
          - name: UserID
            in: path
            required: true
            schema:
              type: "string"
            example: 10
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IUserWebService
      summary:  DeleteUser
      parameters:
          - name: UserID
            in: path
            required: true
            schema:
              type: "string"
            example: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formtemplatecontent/:
    get:
      tags:
        - IFormTemplateContentWebService
      summary:  GetFormTemplateContents
      parameters:
          - name: formCategorySID
            in: query
            required: False
            schema:
              type: "string"
            example: 12
          - name: inProduction
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-03-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: formCategoryID
            in: query
            required: False
            schema:
              type: "string"
            example: 54
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormTemplateContent"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    post:
      tags:
        - IFormTemplateContentWebService
      summary:  PostFormTemplateContents
      parameters:
          - name: newVersion
            in: query
            required: False
            schema:
              type: "string"
            example: B
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/FormTemplateContent"
          application/json:
            schema:
              $ref: "#/components/schemas/FormTemplateContent"
          text/json:
            schema:
              $ref: "#/components/schemas/FormTemplateContent"
          application/*+json:
            schema:
              $ref: "#/components/schemas/FormTemplateContent"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formtemplatecontent/{FormNumber}:
    get:
      tags:
        - IFormTemplateContentWebService
      summary:  GetFormTemplateContent
      parameters:
          - name: FormNumber
            in: path
            required: true
            schema:
              type: "string"
            example: Global_DVIR_0003
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormTemplateContent"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IFormTemplateContentWebService
      summary:  DeleteFormTemplateContent
      parameters:
          - name: FormNumber
            in: path
            required: true
            schema:
              type: "string"
            example: Global_DVIR_0003
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formtemplateheader:
    put:
      tags:
        - IFormTemplateHeaderWebService
      summary:  PutFormTemplateHeaders
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/FormTemplateHeader"
          application/json:
            schema:
              $ref: "#/components/schemas/FormTemplateHeader"
          text/json:
            schema:
              $ref: "#/components/schemas/FormTemplateHeader"
          application/*+json:
            schema:
              $ref: "#/components/schemas/FormTemplateHeader"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formtemplateheader/:
    get:
      tags:
        - IFormTemplateHeaderWebService
      summary:  GetFormTemplateHeaders
      parameters:
          - name: formCategorySID
            in: query
            required: False
            schema:
              type: "string"
            example: 10
          - name: inProduction
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2025-03-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: formCategoryID
            in: query
            required: False
            schema:
              type: "string"
            example: 54
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormTemplateHeader"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    post:
      tags:
        - IFormTemplateHeaderWebService
      summary:  PostFormTemplateHeaders
      parameters:
          - name: newVersion
            in: query
            required: False
            schema:
              type: "string"
            example: B
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/FormTemplateHeader"
          application/json:
            schema:
              $ref: "#/components/schemas/FormTemplateHeader"
          text/json:
            schema:
              $ref: "#/components/schemas/FormTemplateHeader"
          application/*+json:
            schema:
              $ref: "#/components/schemas/FormTemplateHeader"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formtemplateheader/{FormNumber}:
    get:
      tags:
        - IFormTemplateHeaderWebService
      summary:  GetFormTemplateHeader
      parameters:
          - name: FormNumber
            in: path
            required: true
            schema:
              type: "string"
            example: Global_DVIR_0003
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormTemplateHeader"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    patch:
      tags:
        - IFormTemplateHeaderWebService
      summary:  PatchFormTemplateHeader
      parameters:
          - name: FormNumber
            in: path
            required: true
            schema:
              type: "string"
            example: Global_DVIR_0003
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IFormTemplateHeaderWebService
      summary:  DeleteFormTemplateHeader
      parameters:
          - name: FormNumber
            in: path
            required: true
            schema:
              type: "string"
            example: Global_DVIR_0003
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formcategories:
    post:
      tags:
        - IFormTemplateCategoryWebService
      summary:  PostFormTemplateCategories
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/FormTemplateCategory"
          application/json:
            schema:
              $ref: "#/components/schemas/FormTemplateCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/FormTemplateCategory"
          application/*+json:
            schema:
              $ref: "#/components/schemas/FormTemplateCategory"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IFormTemplateCategoryWebService
      summary:  PutFormTemplateCategories
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/FormTemplateCategory"
          application/json:
            schema:
              $ref: "#/components/schemas/FormTemplateCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/FormTemplateCategory"
          application/*+json:
            schema:
              $ref: "#/components/schemas/FormTemplateCategory"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formcategories/:
    get:
      tags:
        - IFormTemplateCategoryWebService
      summary:  GetFormTemplateCategories
      parameters:
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 15
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormTemplateCategory"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formcategories/{FormTemplateCategoryID}:
    patch:
      tags:
        - IFormTemplateCategoryWebService
      summary:  PatchFormTemplateCategories
      parameters:
          - name: FormTemplateCategoryID
            in: path
            required: true
            schema:
              type: "string"
            example: 2f6e0b29-1d8e-4a7b-9df4-9c13c3e2172f
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formcategories/{FormTemplateCategorySID}:
    get:
      tags:
        - IFormTemplateCategoryWebService
      summary:  GetFormTemplateCategory
      parameters:
          - name: FormTemplateCategorySID
            in: path
            required: true
            schema:
              type: "string"
            example: 8
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormTemplateCategory"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IFormTemplateCategoryWebService
      summary:  DeleteFormTemplateCategory
      parameters:
          - name: FormTemplateCategorySID
            in: path
            required: true
            schema:
              type: "string"
            example: 7
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /formcategory/{FormTemplateCategoryID}:
    get:
      tags:
        - IFormTemplateCategoryWebService
      summary:  GetFormTemplateCategoryById
      parameters:
          - name: FormTemplateCategoryID
            in: path
            required: true
            schema:
              type: "string"
            example: f1d7b95e-cde2-4a1a-bb5e-e44608a02c5e
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormTemplateCategory"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IFormTemplateCategoryWebService
      summary:  DeleteFormTemplateCategoryById
      parameters:
          - name: FormTemplateCategoryID
            in: path
            required: true
            schema:
              type: "string"
            example: d1f7035b-d773-4f89-941d-6797f7d3b8f7
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehicle/{VehicleID}:
    get:
      tags:
        - IVehicleWebService
      summary:  GetVehicleById
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: f9e9c8bb-94bc-4e7d-b9c9-fd2e6092b398
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    patch:
      tags:
        - IVehicleWebService
      summary:  PatchVehicles
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: 0c40a75b-2e4a-42ba-9e7f-4b92a4b7e1e3
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IVehicleWebService
      summary:  DeleteVehicleById
      parameters:
          - name: VehicleID
            in: path
            required: true
            schema:
              type: "string"
            example: 4bc6f580-bfa9-4664-9f9d-e7f23a18f03a
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehicles:
    post:
      tags:
        - IVehicleWebService
      summary:  PostVehicles
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Vehicle"
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
          text/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Vehicle"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IVehicleWebService
      summary:  PutVehicles
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Vehicle"
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
          text/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Vehicle"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehicles/:
    get:
      tags:
        - IVehicleWebService
      summary:  GetVehicles
      parameters:
          - name: organizationSID
            in: query
            required: False
            schema:
              type: "string"
            example: 234
          - name: resourceGroupSID
            in: query
            required: False
            schema:
              type: "string"
            example: 34
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2024-12-05T15:30:00Z
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 17
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: b0e8c6fd-b1d5-4b93-8d3b-4a4b1f937cc9
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 72d03a9e-d362-41cc-9ae2-7a1cb1899530
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /vehicles/{VehicleSID}:
    get:
      tags:
        - IVehicleWebService
      summary:  GetVehicle
      parameters:
          - name: VehicleSID
            in: path
            required: true
            schema:
              type: "string"
            example: 342
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IVehicleWebService
      summary:  DeleteVehicle
      parameters:
          - name: VehicleSID
            in: path
            required: true
            schema:
              type: "string"
            example: 231
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /driver/{DriverID}:
    get:
      tags:
        - IDriverWebService
      summary:  GetDriverById
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: Driver123
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    patch:
      tags:
        - IDriverWebService
      summary:  PatchDrivers
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: Driver123
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          text/json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PatchOperation"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IDriverWebService
      summary:  DeleteDriverById
      parameters:
          - name: DriverID
            in: path
            required: true
            schema:
              type: "string"
            example: DR1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /drivers:
    post:
      tags:
        - IDriverWebService
      summary:  PostDrivers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Driver"
          application/json:
            schema:
              $ref: "#/components/schemas/Driver"
          text/json:
            schema:
              $ref: "#/components/schemas/Driver"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Driver"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    put:
      tags:
        - IDriverWebService
      summary:  PutDrivers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Driver"
          application/json:
            schema:
              $ref: "#/components/schemas/Driver"
          text/json:
            schema:
              $ref: "#/components/schemas/Driver"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Driver"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /drivers/:
    get:
      tags:
        - IDriverWebService
      summary:  GetDrivers
      parameters:
          - name: organizationSID
            in: query
            required: False
            schema:
              type: "string"
            example: 54
          - name: resourceGroupSID
            in: query
            required: False
            schema:
              type: "string"
            example: 
          - name: isActive
            in: query
            required: False
            schema:
              type: "string"
            example: true
          - name: asOfDateTime
            in: query
            required: False
            schema:
              type: "string"
            example: 2021-03-15 16:00:46.356
          - name: limit
            in: query
            required: False
            schema:
              type: "string"
            example: 100
          - name: offset
            in: query
            required: False
            schema:
              type: "string"
            example: 0
          - name: organizationID
            in: query
            required: False
            schema:
              type: "string"
            example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
          - name: resourceGroupID
            in: query
            required: False
            schema:
              type: "string"
            example: 1e413f38-2feb-4d86-a8c7-64c17706aa4c
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
  /drivers/{DriverSID}:
    get:
      tags:
        - IDriverWebService
      summary:  GetDriver
      parameters:
          - name: DriverSID
            in: path
            required: true
            schema:
              type: "string"
            example: 17
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
    delete:
      tags:
        - IDriverWebService
      summary:  DeleteDriver
      parameters:
          - name: DriverSID
            in: path
            required: true
            schema:
              type: "string"
            example: 17
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                  type: "string"
        401:
          description: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                  type: "string"
components:
  schemas:
    InboxMessage:
      properties:
        Sid:
          type: "string"
          example: 15
        MessageSID:
          type: "string"
          example: 7549yef0-1234-4eth-9d25-t4p30d519g9y
        MessageType:
          type: "string"
          example: DVIRInspection
        FormTemplateSid:
          type: integer
          format: int64
          example: 13
        FormNumber:
          type: "string"
          example: A
        Title:
          type: "string"
          example: Title
        FormMessage:
          $ref: "#/components/schemas/FormData"
          example: 4
        TextMessage:
          type: "string"
          example: This is the body
        Priority:
          type: "string"
          example: 2
        SenderSid:
          type: integer
          format: int64
          example: 1
        SenderName:
          type: "string"
          example: John
        SenderUserName:
          type: "string"
          example: User123
        SenderType:
          type: "string"
          example: Driver
        Recipients:
          type: "string"
          example: 1
        OwnerSid:
          type: integer
          format: int64
          example: 41
        OwnerName:
          type: "string"
          example: Jack
        OwnerUserName:
          type: "string"
          example: OwnerUser123
        Signatures:
          $ref: "#/components/schemas/Signature"
          example: 
        Attachments:
          $ref: "#/components/schemas/Attachment"
          example: 
        Status:
          type: "string"
          example: 0
        ReceivedTime:
          type: string
          format: datetime
          nullable: true
          example: 2024-05-31 11:20:0
        ReadTime:
          type: string
          format: datetime
          nullable: true
          example: 2024-05-31 14:20:0
        RepliedTime:
          type: string
          format: datetime
          nullable: true
          example: 2024-05-31 14:20:0
        SentTime:
          type: string
          format: datetime
          nullable: true
          example: 2024-05-31 14:20:0
        IntegrationReceivedTime:
          type: string
          format: datetime
          nullable: true
          example: 2024-05-31 14:20:0
        ModifiedDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2024-05-31 14:20:0
        FormVersion:
          type: "string"
          example: A
        DriverId:
          type: "string"
          example: 98
        OrganizationId:
          type: "string"
          example: 694a9fd3-7f4p-48ca-927f-c78005df267
    MessageStatus:
      properties:
        Sid:
          type: "string"
          example: 10
        MessageSid:
          type: "string"
          example: 65
        MessageType:
          type: "string"
          example: DVIRInspection
        FormTemplateSid:
          type: integer
          format: int64
          example: 13
        FormNumber:
          type: "string"
          example: Global_DVIR_0003
        IsAcknowledgeRead:
          type: "boolean"
          example: true
        IsAcknowledgeReceived:
          type: "boolean"
          example: true
        SentTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        ReceivedTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        ReadTime:
          type: string
          format: datetime
          example: 2021-03-16 16:00:46.356
        RepliedTime:
          type: string
          format: datetime
          example: 2021-03-16 17:00:46.356
        RecipientSid:
          type: integer
          format: int64
          nullable: true
          example: 18
        RecipientName:
          type: "string"
          example: false
        RecipientUserName:
          type: "string"
          example: UserName123
        FormVersion:
          type: "string"
          example: A
    Attachment:
      properties:
        Sid:
          type: integer
          format: int64
          example: 254
        MessageSid:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        FieldName:
          type: "string"
          example: Vehicle Inspection Report
        FileName:
          type: "string"
          example: 12345678910FileName.csv
        FileType:
          type: "string"
          example: 4
        DisplayName:
          type: "string"
          example: 12345678910FileName.csv
        Data:
          type: array
          items:
            type: string
            format: string
          example: QmFzZSA2NCBTdHJlYW0=
        Size:
          type: integer
          format: int32
          example: 30
    Signature:
      properties:
        Sid:
          type: integer
          format: int64
          example: 254
        MessageSid:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        FieldName:
          type: "string"
          example: d84ff38f371d.png
        FileName:
          type: "string"
          example: String
        FileType:
          type: "string"
          example: 0
        DisplayName:
          type: "string"
          example: String
        Data:
          type: array
          items:
            type: string
            format: string
          example: QmFzZSA2NCBTdHJlYW0
        Size:
          type: integer
          format: int32
          example: 254
    Message:
      properties:
        Sid:
          type: "string"
          example: 15
        MessageType:
          type: "string"
          example: DVIRInspection
        FormTemplateSid:
          type: "string"
          example: 13
        FormNumber:
          type: "string"
          example: Global_DVIR_003
        FormVersion:
          type: "string"
          example: A
        Recipients:
          type: "string"
          example: Noe Driver
        Title:
          type: "string"
          example: Title
        FormMessage:
          $ref: "#/components/schemas/FormData"
          example: 
        TextMessage:
          type: "string"
          example: This is the body
        Priority:
          type: "string"
          example: 2
        IsReplyRequired:
          type: "boolean"
          example: true
        IsAcknowledgeRead:
          type: "boolean"
          nullable: true
          example: true
        IsAcknowledgeReceived:
          type: "boolean"
          nullable: true
          example: true
        Attachments:
          $ref: "#/components/schemas/Attachment"
          example: 
        RecipientIds:
          type: "string"
          example: 15
    MessageResponse:
      properties:
        messageSid:
          type: string
          format: uuid
          example: d3f29d94-5c8f-4d5b-9241-a3b2f6dcd3d8
        Caption:
          type: "string"
          example: String
        Title:
          type: "string"
          example: Tittle
        Code:
          type: "string"
          example: 200
        ObjectName:
          type: "string"
          example: Message
        Description:
          type: "string"
          example: Vehicle Status
    OutOfRouteReport:
      properties:
        OrganizationID:
          type: "string"
          example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
        OrganizationName:
          type: "string"
          example: Organization Name
        ResourceGroupIDList:
          type: array
          items: 
            type: string
          example: ["1","2","3"]
        RouteID:
          type: "string"
          example: 87
        DriverID:
          type: "string"
          example: 10
        DriverName:
          type: "string"
          example: John
        CoDriverID:
          type: "string"
          example: 17
        CoDriverName:
          type: "string"
          example: Jack
        StopList:
          $ref: "#/components/schemas/Stop"
          example: 10
        StopTotalsList:
          $ref: "#/components/schemas/StopTotals"
          example: 5
    PlanVsActualVsLearnedStandards:
      properties:
        StandardsEventList:
          $ref: "#/components/schemas/StandardsEvent"
          example: 
        StandardsEventTotalsList:
          $ref: "#/components/schemas/StandardsEventTotals"
          example: 
    PlanVsActual:
      properties:
        OrganizationName:
          type: "string"
          example: Xata Logistics
        OrganizationID:
          type: "string"
          example: e3f957b6-1c0b-4e3e-bd3c-7aef6efb3772
        ResourceGroupIDList:
          type: array
          items: 
            type: string
          example: ["a1f957b6-1c0b-4e3e-bd3c-7aef6efb3001", "b2f957b6-1c0b-4e3e-bd3c-7aef6efb3002"]
        RouteID:
          type: "string"
          example: b467d6f2-4b3b-4ed5-bc5a-7980d58a1283
        TripID:
          type: "string"
          example: c7654abc-2b1c-44ff-9a6e-472b08af4f12
        DriverID:
          type: "string"
          example: d4f6e1d8-5f89-4b1e-833d-8a96e4e4c71b
        DriverName:
          type: "string"
          example: John Doe
        CoDriverID:
          type: "string"
          example: e7c1c9aa-6f32-4779-81d8-021b5e8b497f
        CoDriverName:
          type: "string"
          example: Jane Smith
        TrailerID:
          type: "string"
          example: f1a23c45-7b89-423d-a6e9-4b3e5a8c678d
        StartDateTime:
          type: "string"
          example: 2025-01-07T10:00:00Z
        PlanEventList:
          $ref: "#/components/schemas/PlanEvent"
          example: 
        PlanEventTotalsList:
          $ref: "#/components/schemas/PlanEventTotals"
          example: 
        ActualEventList:
          $ref: "#/components/schemas/ActualEvent"
          example: 
        ActualEventTotalsList:
          $ref: "#/components/schemas/ActualEventTotals"
          example: 
    RouteStatusReport:
      properties:
        OrganizationID:
          type: "string"
          example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
        OrganizationName:
          type: "string"
          example: Organization Name
        RouteStatusList:
          $ref: "#/components/schemas/RouteStatus"
          example: 
    SiteActivity:
      properties:
        SiteName:
          type: "string"
          example: Qadrax City
        State:
          type: "string"
          example: Nevada
        OrganizationID:
          type: "string"
          example: f7ab8d9e-7d59-4e2d-9b88-d36fa848f3f4
        OrganizationName:
          type: "string"
          example: LogiMax Innovations
        ResoureGroupIDList:
          type: "string"
          example: 9a3cd0d4-7f22-4d69-b89a-cf7286a1fc89
        ActivityList:
          $ref: "#/components/schemas/Activity"
          example: 
    EldTrailerData:
      properties:
        DriverId:
          type: "string"
          example: Dri123
        DriverName:
          type: "string"
          example: John
        LogDate:
          type: "string"
          example: 2024-04-15 16:00:46.356
        OrganizationId:
          type: "string"
          example: Org123
        OriginatorId:
          type: "string"
          example: Organizator1
        Id:
          type: "string"
          example: 21
        CreatedBy:
          type: "string"
          example: 74
        LicensePlate:
          type: "string"
          example: TXS441
    ShippingData:
      properties:
        DriverId:
          type: "string"
          example: Dri123
        DriverName:
          type: "string"
          example: John
        LogDate:
          type: "string"
          example: 2024-04-15 16:00:46.356
        OrganizationId:
          type: "string"
          example: Org12
        CreatedBy:
          type: "string"
          example: 8
        Id:
          type: "string"
          example: 21
    CarrierInfo:
      properties:
        CarrierId:
          type: "string"
          example: John
        CarrierName:
          type: "string"
          example: Carrier Name
        DOTNumber:
          type: "string"
          example: 2316548
        EffectiveDateTime:
          type: "string"
          example: 2024-04-15 16:00:46.356
        OrganizationId:
          type: "string"
          example: Org12
        CarrierLocation:
          $ref: "#/components/schemas/CarrierLocation"
          example: 
    CoDriverData:
      properties:
        DriverId:
          type: "string"
          example: Dri2
        DriverName:
          type: "string"
          example: Jack
        LogDate:
          type: "string"
          example: 2024-04-15 16:00:46.356
        OrganizationId:
          type: "string"
          example: Org3
        Id:
          type: "string"
          example: 23
        CreatedBy:
          type: "string"
          example: 74
        FirstName:
          type: "string"
          example: Miguel
        LastName:
          type: "string"
          example: Rubio
    IntermediateLog:
      properties:
        AccumulatedMiles:
          type: number
          format: float
          example: 20.2
        DistanceSinceLastCoordinate:
          type: number
          format: float
          example: 10.2
        DriverId:
          type: "string"
          example: Dri2
        DriverName:
          type: "string"
          example: Jack
        ElapsedEngineHours:
          type: number
          format: float
          example: 4.2
        EldCheckSum:
          type: "string"
          example: Dri2
        EldSequenceId:
          type: "string"
          example: 32
        IsDiagnosticActive:
          type: "boolean"
          example: True
        IsMalfunctionActive:
          type: "boolean"
          example: False
        Location:
          $ref: "#/components/schemas/LocationInfo"
          example: 
        LogDate:
          type: "string"
          example: 2024-04-15 16:00:46.356
        Odometer:
          type: number
          format: float
          example: 500
        OrganizationId:
          type: "string"
          example: ORG1
        Origin:
          type: "string"
          example: 2
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        TotalEngineHours:
          type: number
          format: float
          example: 120
        VehicleId:
          type: "string"
          example: Vh12
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
    CertifiedLogs:
      properties:
        CertifiedLogDate:
          type: "string"
          example: 2024-04-13
        DriverId:
          type: "string"
          example: Dri2
        DriverName:
          type: "string"
          example: John
        EldSequenceId:
          type: "string"
          example: ELD1
        OrganizationId:
          type: "string"
          example: Ortg12
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        VehicleId:
          type: "string"
          example: Vh12
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
    EldEnginePowerEvent:
      properties:
        DistanceSinceLastCoordinate:
          type: number
          format: float
          example: 12
        DriverId:
          type: "string"
          example: Drvier1
        DriverName:
          type: "string"
          example: Jack
        EngineStatus:
          type: "string"
          example: 1
        EldSequenceId:
          type: "string"
          example: 32
        Location:
          $ref: "#/components/schemas/Location"
          example: 4km N Mountain View CA
        LogDate:
          type: "string"
          example: 2024-04-15 16:00:46.356
        Odometer:
          type: number
          format: float
          example: 100
        OrganizationId:
          type: "string"
          example: Org1
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        Shipments:
          type: array
          items:
            type: string
            format: string
          example: ["A","B","C"]
        TotalEngineHours:
          type: number
          format: float
          example: 5.12
        Trailers:
          type: array
          items:
            type: string
            format: string
          example: ["1","2","3"]
        VehicleId:
          type: "string"
          example: Vh1
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
    EldLoginLogoutActivity:
      properties:
        DriverId:
          type: "string"
          example: Dr1
        DriverName:
          type: "string"
          example: Jack
        EldSequenceId:
          type: "string"
          example: 32
        LogDate:
          type: "string"
          example: 2024-04-15 16:00:46.356
        LoginLogoutStatus:
          type: "string"
          example: 6
        Odometer:
          type: number
          format: float
          example: 415
        OrganizationId:
          type: "string"
          example: Org12
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        TotalEngineHours:
          type: number
          format: float
          example: 4.2
        VehicleId:
          type: "string"
          example: VH123
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
    DriverException:
      properties:
        Comment:
          type: "string"
          example: Comment
        CreatedBy:
          type: "string"
          example: 5
        DriverId:
          type: "string"
          example: Dri23
        DriverName:
          type: "string"
          example: John
        EditedDateTime:
          type: "string"
          example: 2024-04-15 16:00:46.356
        EventId:
          type: "string"
          example: 7
        ExceptionMessage:
          type: "string"
          example: Exception Message
        ExceptionType:
          type: "string"
          example: 4
        IsDeleted:
          type: "string"
          example: false
        LogDate:
          type: "string"
          example: 2024-04-15 16:00:46.356
        OrganizationId:
          type: "string"
          example: Org21
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        VehicleId:
          type: "string"
          example: V2
    EldRemarks:
      properties:
        CreatedBy:
          type: "string"
          example: 5
        DriverId:
          type: "string"
          example: Dr4
        DriverName:
          type: "string"
          example: John
        EventId:
          type: "string"
          example: 4
        IsDeleted:
          type: "boolean"
          example: False
        LogDate:
          type: "string"
          example: 2024-04-15 16:00:46.356
        OrganizationId:
          type: "string"
          example: Org12
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        Remark:
          type: "string"
          example: Beginning of Restart Period
        VehicleId:
          type: "string"
          example: VH2
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
    EldDriverStatus:
      properties:
        AccumulatedMiles:
          type: number
          format: float
          example: 120
        CreatedBy:
          type: "string"
          example: 4
        DeleteStatus:
          type: "boolean"
          example: 0
        DistanceSinceLastCoordinate:
          type: number
          format: float
          example: 20
        DriverId:
          type: "string"
          example: DR5
        DriverName:
          type: "string"
          example: Jack
        DutyStatus:
          type: "string"
          example: On Duty
        EditDatetime:
          type: "string"
          example: 2024-11-11 18:34:58.000
        ElapsedEngineHours:
          type: number
          format: float
          example: 2.5
        EldCheckSum:
          type: "string"
          example: 4
        EventGuid:
          type: "string"
          example: d3f29d94-5c8f-4d5b-9241-a3b2f6dcd3d8
        EventRecordStatus:
          type: "string"
          example: 1
        EldSequenceId:
          type: "string"
          example: 4
        IsDiagnosticActive:
          type: "boolean"
          example: 4
        IsMalfunctionActive:
          type: "boolean"
          example: 0
        Location:
          $ref: "#/components/schemas/DriverStatusLocationInfo"
          example: 
        LogDate:
          type: "string"
          example: 2024-11-11 18:34:58.000
        Odometer:
          type: number
          format: float
          example: 410
        OrganizationId:
          type: "string"
          example: Org1
        Origin:
          type: "string"
          example: 2
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        TotalEngineHours:
          type: number
          format: float
          example: 4
        VehicleId:
          type: "string"
          example: VH1
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
    VehicleEldData:
      properties:
        DriverId:
          type: "string"
          example: DR4
        DriverName:
          type: "string"
          example: Jack
        EldId:
          type: "string"
          example: 12
        EldProvider:
          type: "string"
          example: Omnitracs LLC
        EldRegistrationId:
          type: "string"
          example: 5123
        LogDate:
          type: "string"
          example: 120
        OrganizationId:
          type: "string"
          example: 120
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        VehicleId:
          type: "string"
          example: VH1
    EldDiagAndMalfunctions:
      properties:
        DiagMalfunctionCode:
          type: "string"
          example: 1
        DiagMalfunctionStatus:
          type: "string"
          example: Extracted
        DriverId:
          type: "string"
          example: DR1
        DriverName:
          type: "string"
          example: Jack
        EventSequenceId:
          type: "string"
          example: 7678
        LogDate:
          type: "string"
          example: 2024-01-23 19:11:00.000
        Odometer:
          type: "string"
          example: 5416235
        OrganizationId:
          type: "string"
          example: ORG1
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        TotalEngineHours:
          type: "string"
          example: 4.2
        VehicleId:
          type: "string"
          example: VH1
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
    DriverTerminalInfo:
      properties:
        DriverId:
          type: "string"
          example: DR1
        DriverName:
          type: "string"
          example: John
        ModifiedDateTime:
          type: "string"
          example: 2024-01-23 19:49:56.000
        HomeTerminalLocation:
          $ref: "#/components/schemas/TerminalLocation"
          example: 
        HomeTerminalName:
          type: "string"
          example: Device
        OrganizationId:
          type: "string"
          example: ORG12
        TimeZone:
          $ref: "#/components/schemas/DriverOrganizationTimeZone"
          example: 
    EldDriverRuleChange:
      properties:
        DriverId:
          type: "string"
          example: DR1
        DriverName:
          type: "string"
          example: Jon
        EventId:
          type: "string"
          example: 124
        HosRuleSetId:
          type: "string"
          example: 1
        IsEldExempt:
          type: "boolean"
          example: true
        LogDate:
          type: "string"
          example: 2024-10-23 11:59:54.490
        OrganizationId:
          type: "string"
          example: ORG1
        PcEnabled:
          type: "boolean"
          example: true
        RecordDateTime:
          type: "string"
          example: 2024-04-15
        YmEnabled:
          type: "boolean"
          example: true
    Annotations:
      properties:
        Annotation:
          type: "string"
          example: annotations
        AnnotationDateTime:
          type: "string"
          example: 2024-10-23 11:59:54.490
        CreatedBy:
          type: "string"
          example: 7423
        DriverId:
          type: "string"
          example: DR4
        DriverName:
          type: "string"
          example: 124
        LogDate:
          type: "string"
          example: 2024-10-23 11:59:54.490
        OrganizationId:
          type: "string"
          example: Org12
        RecordDateTime:
          type: "string"
          example: 2024-04-15
    UnassignedVehicleActivity:
      properties:
        DriverAssociationGap:
          type: "string"
          example: 9846
        FirstDriveTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        MotionDistance:
          type: number
          format: float
          example: 324168
        NextAssociationDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        NextKnownDriverId:
          type: "string"
          example: 65
        NextKnownDriverName:
          type: "string"
          example: Alonso
        Note:
          type: "string"
          example: String
        NoteUpdateBy:
          type: "string"
          example: Michael
        NoteUpdatedDate:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        OrganizationId:
          type: "string"
          example: CompanyName
        OrganizationName:
          type: "string"
          example: Organization Name
        PreviousAssociationDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        PreviousKnownDriverId:
          type: "string"
          example: 2547
        PreviousKnownDriverName:
          type: "string"
          example: Jack
        Reclassify:
          type: "string"
          example: 12
        RejectedBy:
          type: "string"
          example: Sebastian
        VehicleId:
          type: "string"
          example: 32
        UnassignedVehicleActivitySegments:
          $ref: "#/components/schemas/UnassignedVehicleActivitySegment"
          example: 
    UnassignedVehicleActivityV2:
      properties:
        DriverAssociationGap:
          type: "string"
          example: 4132
        FirstDriveTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        MotionDistance:
          type: number
          format: float
          example: 12678967.543233
        NextAssociationDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        NextKnownDriverId:
          type: "string"
          example: 7575
        NextKnownDriverName:
          type: "string"
          example: Alonso
        Note:
          type: "string"
          example: String
        NoteUpdateBy:
          type: "string"
          example: Lewis
        NoteUpdatedDate:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        OrganizationId:
          type: "string"
          example: 654
        OrganizationName:
          type: "string"
          example: Organizatiom Name
        PreviousAssociationDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        PreviousKnownDriverId:
          type: "string"
          example: 87
        PreviousKnownDriverName:
          type: "string"
          example: Michael
        Reclassify:
          type: "string"
          example: 12
        RejectedBy:
          type: "string"
          example: Sebastian
        VehicleId:
          type: "string"
          example: 32
        UnassignedVehicleActivitySegments:
          $ref: "#/components/schemas/UnassignedVehicleActivitySegmentV2"
          example: 
    UnassignedVehicleActivitySegmentReclassify:
      properties:
        Classification:
          type: "string"
          example: Unassigned
        Comment:
          type: "string"
          example: This is comment
    ResponseMessage:
      properties:
        SID:
          type: integer
          format: int64
          example: 13595
        Caption:
          type: "string"
          example: String
        Title:
          type: "string"
          example: This is the title
        Code:
          type: "string"
          example: 200
        ObjectName:
          type: "string"
          example: Type of entity name
        Description:
          type: "string"
          example: Action executed
        Id:
          type: "string"
          example: 62198432
    CriticalEventSummary:
      properties:
        CriticalEventType:
          type: "string"
          example: 25
        Description:
          type: "string"
          example: Harsh braking detected near intersection.
        DriverID:
          type: "string"
          example: b6a77d52-6f3e-4823-a23d-1b6a776f24c1
        DriverName:
          type: "string"
          example: John Doe
        Duration:
          type: integer
          format: int64
          example: 120
        EndDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2025-01-02T11:30:00Z
        EngineHours:
          type: integer
          format: int32
          nullable: true
          example: 1500
        EventDateTime:
          type: string
          format: datetime
          example: 2025-01-01T08:00:00Z
        EventType:
          type: "string"
          example: Hard Acceleration
        EventSID:
          type: integer
          format: int64
          example: 457891
        FuelLevel:
          type: integer
          format: int32
          nullable: true
          example: 75
        GForce:
          type: number
          format: double
          nullable: true
          example: 0.85
        GPSSpeed:
          type: number
          format: double
          nullable: true
          example: 60.5
        IgnitionStatus:
          type: "boolean"
          nullable: true
          example: true
        Location:
          type: "string"
          example: 123 Main St, Anytown, USA
        ModifiedDateTime:
          type: string
          format: datetime
          example: 2025-01-01T10:15:00Z
        CriticalEventDetails:
          $ref: "#/components/schemas/CriticalEventDetail"
          example: 
        Odometer:
          type: number
          format: double
          example: 250000.5
        OrganizationID:
          type: "string"
          example: ab12456e-7c45-6789-abcd-1122aabbccdd
        OrganizationName:
          type: "string"
          example: Omnitracs Logistics Inc.
        StartDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2025-01-01T07:00:00Z
        SummaryFlags:
          $ref: "#/components/schemas/CriticalEventDetailFlags"
          example: 
        TriggerData:
          type: number
          format: double
          nullable: true
          example: 0.05
        VIN:
          type: "string"
          example: 1HGCM82633A123456
        VehicleID:
          type: "string"
          example: c56789ff-4abc-4def-8abc-1234abcd5678
        VehicleName:
          type: "string"
          example: Truck 1234
        Voltage:
          type: number
          format: double
          nullable: true
          example: 13.8
        Video:
          $ref: "#/components/schemas/CriticalEventVideo"
          example: [{ "VideoURL": "http://example.com/video1.mp4" }]
    BlackBoxSummary:
      properties:
        DriverID:
          type: "string"
          example: DR324
        DriverName:
          type: "string"
          example: John
        EventDateTime:
          type: string
          format: datetime
          example: 2024-05-26 22:09:14.000
        Description:
          type: "string"
          example: Hard Break
        Duration:
          type: integer
          format: int64
          example: 225
        EndDateTime:
          type: string
          format: datetime
          example: 2024-05-26 22:09:14.000
        EngineHours:
          type: integer
          format: int32
          nullable: true
          example: 225
        EventSID:
          type: integer
          format: int64
          example: 987654321
        GForce:
          type: number
          format: double
          nullable: true
          example: 1.87
        GPSSpeed:
          type: number
          format: double
          nullable: true
          example: 57
        IgnitionStatus:
          type: "boolean"
          nullable: true
          example: true
        Location:
          type: "string"
          example: Town of Washington,Wisconsi
        BlackBoxDetails:
          $ref: "#/components/schemas/BlackBoxDetail"
          example: 
        Odometer:
          type: integer
          format: int32
          nullable: true
          example: 13349
        OrganizationID:
          type: "string"
          example: 978
        OrganizationName:
          type: "string"
          example: Organization Name
        SpeedChangeType:
          type: "string"
          example: 0
        SpeedChange:
          type: number
          format: double
          example: 10
        StartDateTime:
          type: string
          format: datetime
          example: 2024-05-26 22:09:14.000
        VehicleID:
          type: "string"
          example: VH147
        VehicleName:
          type: "string"
          example: Vehicle Name
        VIN:
          type: "string"
          example: 1HGCM82633A123456
        Voltage:
          type: number
          format: double
          nullable: true
          example: 24
        ModifiedDateTime:
          type: string
          format: datetime
          example: 2024-05-26 22:09:14.000
    ReportData:
      properties:
        ReportID:
          type: "string"
          example: R1
        Status:
          type: "string"
          example: Success
        Elapsed:
          type: "string"
          example: 0
        XML:
          type: "string"
          example: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><reportExecution><exports><export><attachments><attachment><contentType>image/png</contentType><fileName>img_0_0_0</fileName></attachment></attachments><id>edeca978-f24e-4ea1-8c10-50527eead1a9</id><outputResource><contentType>text/html</contentType><outputFinal>true</outputFinal></outputResource><status>ready</status></export></exports><reportURI>/public/Reports/HOS/Log_Activity/HOSDriverLogSummaryReport</reportURI><requestId>ab9fdded-a4ff-4316-a720-464914337d88</requestId><status>ready</status><totalPages>1567</totalPages></reportExecution>
    ReportParameters:
      properties:
        ReportID:
          type: "string"
          example: R3
        Status:
          type: "string"
          example: Success
        Parameters:
          type: array
          items:
            type: string
            format: string
          example: ["9352589B-39AD-4A98-965F-CAC39A19F04A", "9352589B-39AD-4A98-965F-CAC39A19F04B", "658547", "BBF7990F-6FC6-4BA2-8AA3-D868A21BEF57", "658546", "edeca978-f24e-4ea1-8c10-50527eead1a9", "img_0_0_0.png", "I am an Image used within a report", "<JasperserverConfig>
<JSURL>http://localHost:8080/jasperserver-pro</JSURL>
<JSUsername>jasperadmin_user</JSUsername>
<JSPassowrd>jasperadmin_password</JSPassowrd>
<JSAsyncCheckTimes>300</JSAsyncCheckTimes>
</JasperserverConfig>"]
    OperationSummary:
      properties:
        AssetID:
          type: "string"
          example: b467d6f2-4b3b-4ed5-bc5a-7980d58a1283
        AssetType:
          type: "string"
          example: Vehicle
        AssetName:
          type: "string"
          example: Truck A
        OrganizationName:
          type: "string"
          example: Xata Logistics
        OrganizationID:
          type: "string"
          example: e3f957b6-1c0b-4e3e-bd3c-7aef6efb3772
        UnitOfMeasure:
          type: "string"
          example: Metric
        BeginDateTime:
          type: string
          format: datetime
          example: 2025-01-01T00:00:00Z
        EndDateTime:
          type: string
          format: datetime
          example: 2025-01-31T23:59:59Z
        TotalFuelEconomy:
          type: number
          format: double
          example: 15.5
        TotalDistance:
          type: number
          format: double
          example: 1000.0
        TotalFuel:
          type: number
          format: double
          example: 120.0
        OverSpeedDistance:
          type: number
          format: double
          example: 50.0
        OverSpeedDistancePercent:
          type: number
          format: double
          example: 5.0
        RPMHighPercent:
          type: number
          format: double
          example: 2.5
        TotalHardBrakes:
          type: integer
          format: int32
          example: 10
        HighSpeedMilesPerBrake:
          type: number
          format: double
          example: 3.0
        TotalStopTime:
          type: integer
          format: int32
          example: 120
        AvgStopTime:
          type: integer
          format: int32
          example: 30
        IdleTime:
          type: integer
          format: int32
          example: 200
        IdleTimePercent:
          type: number
          format: double
          example: 15.0
        IdleFuel:
          type: number
          format: double
          example: 10.0
        PTOTime:
          type: integer
          format: int32
          example: 50
        PTOFuel:
          type: number
          format: double
          example: 5.0
    OperationProfile:
      properties:
        AssetID:
          type: "string"
          example: b467d6f2-4b3b-4ed5-bc5a-7980d58a1283
        AssetType:
          type: "string"
          example: Vehicle
        AssetName:
          type: "string"
          example: Truck A
        OrganizationName:
          type: "string"
          example: Xata Logistics
        OrganizationID:
          type: "string"
          example: e3f957b6-1c0b-4e3e-bd3c-7aef6efb3772
        UnitOfMeasure:
          type: "string"
          example: Metric
        BeginDateTime:
          type: string
          format: datetime
          example: 2025-01-01T00:00:00Z
        EndDateTime:
          type: string
          format: datetime
          example: 2025-01-31T23:59:59Z
        SpeedBracketSummary:
          $ref: "#/components/schemas/OperationProfileSpeedBracket"
          example: 
        SegmentSummary:
          $ref: "#/components/schemas/OperationProfileSegment"
          example: 
        MotionExceptionSummary:
          $ref: "#/components/schemas/OperationProfileMotionExceptionSummary"
          example: 
    JurisdictionCrossing:
      properties:
        CrossingDateTime:
          type: "string"
          example: 2025-01-08T14:30:00Z
        Entering:
          type: "string"
          example: CA
        Latitude:
          type: number
          format: double
          example: 34.0522
        Leaving:
          type: "string"
          example: NV
        Longitude:
          type: number
          format: double
          example: -118.2437
        Odometer:
          type: number
          format: double
          example: 150234.56
        OrganizationID:
          type: "string"
          example: 9f1a7b5e-4567-48c2-bcde-6a123456789f
        OrganizationName:
          type: "string"
          example: Acme Logistics
        VehicleID:
          type: "string"
          example: c4e8aef0-1234-4bcd-9876-1f23456789ab
    FuelReceipt:
      properties:
        CardNumber:
          type: "string"
          example: 1234567812345678
        Comments:
          type: "string"
          example: Fuel purchased during cross-country trip.
        Units:
          type: "string"
          example: Gallons
        FuelDate:
          type: string
          format: datetime
          example: 2025-01-08T14:30:00Z
        FuelReceiptSID:
          type: integer
          format: int64
          example: 2456
        Invoice:
          type: "string"
          example: INV-123456
        Location:
          type: "string"
          example: 123 Main St, Springfield, IL
        ModifiedBy:
          type: integer
          format: int64
          example: John Doe
        ModifiedDate:
          type: string
          format: datetime
          example: 2025-01-08T15:00:00Z
        OrganizationID:
          type: "string"
          example: d92ef4ca-88d1-4726-93ef-2547e675d11a
        OrganizationName:
          type: "string"
          example: FuelCorp International
        Site:
          type: "string"
          example: Site A - Pump 3
        State_Province:
          type: "string"
          example: Illinois
        TotalPrice:
          type: "string"
          example: 123.45
        VehicleID:
          type: "string"
          example: e6c3d2f4-b345-4f2a-a6d7-4f58b7d90123
        Vendor:
          type: "string"
          example: FuelStation Inc.
        VIN:
          type: "string"
          example: 1HGCM82633A123456
        Volume:
          type: "string"
          example: 15.5
        Method:
          type: "string"
          example: Credit Card
    IFTADistance:
      properties:
        Comments:
          type: "string"
          example: Fuel purchase in California
        DistanceUnit:
          type: "string"
          example: Miles
        EndDate:
          type: string
          format: datetime
          example: 2023-12-31T23:59:59Z
        ModifiedBy:
          type: integer
          format: int64
          example: 123456
        ModifiedDate:
          type: string
          format: datetime
          example: 2024-01-01T12:00:00Z
        NonTollDistance:
          type: "string"
          example: 150
        StartDate:
          type: string
          format: datetime
          example: 2023-12-01T00:00:00Z
        TollDistance:
          type: "string"
          example: 20
        TotalDistanceVal:
          type: number
          format: double
          nullable: true
          example: 170
        TotalDistance:
          type: "string"
          example: 170
        OverallNonTollDistanceVal:
          type: number
          format: double
          nullable: true
          example: 140
        OverallNonTollDistance:
          type: "string"
          example: 140
        OverallTollDistanceVal:
          type: number
          format: double
          nullable: true
          example: 30
        OverallTollDistance:
          type: "string"
          example: 30
        OverallTotalDistanceVal:
          type: number
          format: double
          nullable: true
          example: 170
        OverallTotalDistance:
          type: "string"
          example: 170
        PercentageInStateVal:
          type: number
          format: double
          nullable: true
          example: 80
        PercentageInState:
          type: "string"
          example: 80%
        OrganizationId:
          type: "string"
          example: 9c3b0b19-5cf1-48c6-81a2-cb5a509d2377
        OrganizationName:
          type: "string"
          example: Xata Corporation
        StateProvince:
          type: "string"
          example: California
        VehicleId:
          type: "string"
          example: d4e4b19e-3d74-4926-a31f-8c24438ad3cf
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
    DVIR:
      properties:
        AssetID:
          type: "string"
          example: 21
        AssetType:
          type: "string"
          example: Battery
        DriverID:
          type: "string"
          example: 78
        DriverName:
          type: "string"
          example: John
        DefectsCorrected:
          type: "boolean"
          example: true
        InspectionDateTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        InspectionSID:
          type: integer
          format: int64
          example: 3213
        InspectionItems:
          $ref: "#/components/schemas/InspectionItem"
          example: 
        InspectionType:
          type: "string"
          example: 84
        Latitude:
          type: number
          format: double
          example: 37.5483
        Location:
          type: "string"
          example: San Mateo
        Longitude:
          type: number
          format: double
          example: -122.3133
        OtherDefects:
          type: "string"
          example: None
        Odometer:
          type: number
          format: double
          example: 101417998.046875
        OrganizationID:
          type: "string"
          example: 987
        OrganizationName:
          type: "string"
          example: Organization Name
        Plate:
          type: "string"
          example: 9XYZ456
        PreviousInspection:
          type: "string"
          example: String
        Comment:
          type: "string"
          example: This is a comment
        ClientComment:
          type: "string"
          example: This is the client comment
        SafeToOperate:
          type: "boolean"
          example: true
        VIN:
          type: "string"
          example: 1FTWX33F5KEA12345
        DistanceUnit:
          type: "string"
          example: Milles
        ModifiedDateTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        CustomData:
          type: "string"
          example: String
    InspectionDefects:
      properties:
        ApproverName:
          type: "string"
          example: John
        CertifiedDate:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        DefectSIDs:
          type: array
          items: 
            type: number
          example: ["1","2","3"]
        InspectionSID:
          type: integer
          format: int64
          example: 7
        IsSafe:
          type: "boolean"
          example: true
        WorkPerformed:
          type: "string"
          example: Changed Battery
        RepairNotRequired:
          type: "boolean"
          example: false
        RepairNotRequiredComment:
          type: "string"
          example: This is a comment
    RepairInfo:
      properties:
        DefectSID:
          type: integer
          format: int64
          example: 321
        InspectionSID:
          type: integer
          format: int64
          example: 852
        ApproverName:
          type: "string"
          example: John
        WorkPerformed:
          type: "string"
          example: Change Windshield
        RepairNotRequiredComment:
          type: "string"
          example: String
        WorkPerformedBy:
          type: "string"
          example: Workshop
        RepairDate:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        RepairOrderNumber:
          type: "string"
          example: 8
        RepairStatus:
          type: "string"
          example: 1
    AssetFaultCode:
      properties:
        AssetID:
          type: "string"
          example: b467d6f2-4b3b-4ed5-bc5a-7980d58a1283
        AssetType:
          type: "string"
          example: Truck
        DriverID:
          type: "string"
          example: cdef2345-6789-0123-4567-890123456789
        DriverName:
          type: "string"
          example: John Doe
        OrganizationName:
          type: "string"
          example: XRS Logistics
        OrganizationID:
          type: "string"
          example: 550e8400-e29b-41d4-a716-446655440000
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
        FaultDateTime:
          type: string
          format: datetime
          example: 2025-01-01T10:00:00Z
        FaultDuration:
          type: integer
          format: int32
          example: 3600
        FaultDescription:
          type: "string"
          example: Engine overheating
        SID:
          type: integer
          format: int64
          example: 1234567890
        FaultSourceSerialNumber:
          type: "string"
          example: SN12345678
        GPSSpeed:
          type: number
          format: double
          example: 65.5
        Heading:
          type: number
          format: double
          example: 180.0
        Latitude:
          type: number
          format: double
          example: 40.712776
        Location:
          type: "string"
          example: New York, NY
        Longitude:
          type: number
          format: double
          example: -74.005974
        J1708J1587MID:
          type: integer
          format: int32
          example: 128
        J1708J1587PID:
          type: integer
          format: int32
          example: 190
        J1708J1587SID:
          type: integer
          format: int32
          example: 54
        J1939SA:
          type: integer
          format: int32
          example: 45
        J1939PGN:
          type: integer
          format: int32
          example: 65265
        J1939SPN:
          type: integer
          format: int32
          example: 171
        FMI:
          type: integer
          format: int32
          example: 2
        LampProtect:
          type: "string"
          example: Off
        LampAmber:
          type: "string"
          example: On
        LampRed:
          type: "string"
          example: Off
        LampMalfunction:
          type: "string"
          example: On
        OccurrenceCount:
          type: integer
          format: int32
          example: 5
        RoadSpeed:
          type: number
          format: double
          example: 70.5
    StopArrivalAlert:
      properties:
        InboxMessageSID:
          type: "string"
          example: MSG123456
        AlertType:
          type: "string"
          example: ArrivalAlert
        TriggerTime:
          type: string
          format: datetime
          example: 2025-04-02T14:30:00Z
        DriverSID:
          type: integer
          format: int64
          example: 9876543210
        DriverOrganizationSID:
          type: integer
          format: int64
          example: 123456789
        VehicleSID:
          type: integer
          format: int64
          example: 1122334455
        VehcileOrganizationSID:
          type: integer
          format: int64
          example: 9988776655
        SiteSID:
          type: integer
          format: int64
          example: 567890123
        SiteOrganizationSID:
          type: integer
          format: int64
          example: 543210987
        Longitude:
          type: number
          format: double
          example: -77.0369
        Latitude:
          type: number
          format: double
          example: 38.9072
        Odometer:
          type: number
          format: double
          example: 12345.67
        StopName:
          type: "string"
          example: Main Street Stop
        SiteID:
          type: "string"
          example: SITE123
        GeoLocation:
          type: "string"
          example: GeoLocation123
        ArrivalDateTime:
          type: string
          format: datetime
          example: 2025-04-02T15:00:00Z
    StopDepartureAlert:
      properties:
        InboxMessageSID:
          type: "string"
          example: 1234
        AlertType:
          type: "string"
          example: DepartureAlert
        TriggerTime:
          type: string
          format: datetime
          example: 2025-04-02T08:30:00
        DriverSID:
          type: integer
          format: int64
          example: 15001
        DriverOrganizationSID:
          type: integer
          format: int64
          example: 32001
        VehicleSID:
          type: integer
          format: int64
          example: 41001
        VehcileOrganizationSID:
          type: integer
          format: int64
          example: 51001
        SiteSID:
          type: integer
          format: int64
          example: 6001
        SiteOrganizationSID:
          type: integer
          format: int64
          example: 7001
        Longitude:
          type: number
          format: double
          example: -74.0060
        Latitude:
          type: number
          format: double
          example: 40.7128
        Odometer:
          type: number
          format: double
          example: 15000
        StopName:
          type: "string"
          example: Main Street Stop
        SiteID:
          type: "string"
          example: d6a53f76-ea0d-4a92-ae75-4c5f3c7baf90
        GeoLocation:
          type: "string"
          example: 40.7128,-74.0060
        DepartureDateTime:
          type: string
          format: datetime
          example: 2025-04-02T09:00:00
    StopDetentionAlert:
      properties:
        InboxMessageSID:
          type: "string"
          example: 12345
        AlertType:
          type: "string"
          example: AlertType1
        TriggerTime:
          type: string
          format: datetime
          example: 2025-04-02T08:30:00
        DriverSID:
          type: integer
          format: int64
          example: 123
        DriverOrganizationSID:
          type: integer
          format: int64
          example: 456
        VehicleSID:
          type: integer
          format: int64
          example: 789
        VehcileOrganizationSID:
          type: integer
          format: int64
          example: 321
        SiteSID:
          type: integer
          format: int64
          example: 654
        SiteOrganizationSID:
          type: integer
          format: int64
          example: 987
        Longitude:
          type: number
          format: double
          example: 50.12345
        Latitude:
          type: number
          format: double
          example: -122.12345
        Odometer:
          type: number
          format: double
          example: 123.45
        StopName:
          type: "string"
          example: Main Stop
        SiteID:
          type: "string"
          example: b3a8f38d-3789-47e8-876e-926efb0d5c92
        GeoLocation:
          type: "string"
          example: 41.8228,-73.0050
        EventDuration:
          type: "string"
          example: 2 hours
        EventDateTime:
          type: string
          format: datetime
          example: 2025-04-02T09:30:00
        EventNumber:
          type: integer
          format: int32
          example: 200
        EventTime:
          type: string
          format: datetime
          example: 2025-04-02T10:00:00
        DepartureDateTime:
          type: string
          format: datetime
          example: 2025-04-02T11:00:00
    DriverLoginAlert:
      properties:
        InboxMessageSID:
          type: "string"
          example: 67890
        Longitude:
          type: number
          format: double
          example: 51.5074
        Latitude:
          type: number
          format: double
          example: -0.1278
        Odometer:
          type: number
          format: double
          example: 150.75
        AlertType:
          type: "string"
          example: LoginAlert
        TriggerTime:
          type: string
          format: datetime
          example: 2025-04-02T08:00:00
        DriverSID:
          type: integer
          format: int64
          example: 101
        DriverOrganizationSID:
          type: integer
          format: int64
          example: 202
    DriverLogoutAlert:
      properties:
        InboxMessageSID:
          type: "string"
          example: 11223
        Longitude:
          type: number
          format: double
          example: 52.2053
        Latitude:
          type: number
          format: double
          example: -0.1218
        Odometer:
          type: number
          format: double
          example: 170.80
        AlertType:
          type: "string"
          example: LogoutAlert
        TriggerTime:
          type: string
          format: datetime
          example: 2025-04-02T08:45:00
        DriverSID:
          type: integer
          format: int64
          example: 103
        DriverOrganizationSID:
          type: integer
          format: int64
          example: 204
    DriverLog:
      properties:
        CarrierName:
          type: "string"
          example: Carrier Name
        CarrierAddress:
          type: "string"
          example: 060418  ep, British Columbia G8T6N3
        CarrierDOT:
          type: "string"
          example: 064018
        CoDriverName:
          type: "string"
          example: Jack
        CoDriverID:
          type: "string"
          example: CDRV74
        DistanceEdit:
          type: "boolean"
          example: true
        DistanceUnit:
          type: "string"
          example: MelleMilles
        DriverConfirmed:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: Dri15
        DriverName:
          type: "string"
          example: John
        DriveTimeToday:
          type: integer
          format: int32
          example: 357234
        EditFlag:
          type: "boolean"
          example: true
        FleetName:
          type: "string"
          example: 15
        FleetAddress:
          type: "string"
          example: Fleet Address
        FleetDOT:
          type: "string"
          example: 718123
        FromLocation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        HOSRuleSet:
          type: "string"
          example: US 8/80 Day NC hrs.
        LastResetDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2024-05-31 11:20:0
        LogDetails:
          $ref: "#/components/schemas/DriverLogDetail"
          example: 
        OffDutyTimeToday:
          type: integer
          format: int32
          example: 2147
        OnDutyTimeToday:
          type: integer
          format: int32
          example: 483647
        OnDutyTimeWeek:
          type: integer
          format: int32
          example: 2147483647
        ReportDateTime:
          type: string
          format: datetime
          example: 2024-05-31 11:20:0
        SensorFailure:
          type: "boolean"
          example: false
        ShippingInformation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        SleeperBerthTimeToday:
          type: integer
          format: int32
          example: 968513
        TimeZone:
          type: "string"
          example: CST
        ToLocation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        TrailerID:
          type: "string"
          example: TRL754
        TrailerLicensePlate:
          type: "string"
          example: AB123CD
        TotalDistanceToday:
          type: number
          format: double
          example: 967841
        TotalViolationTimeToday:
          type: integer
          format: int32
          example: 0
        VehicleEndOdometer:
          type: "string"
          example: 11079211.254
        VehicleID:
          type: "string"
          example: VHC17
        VehicleLicensePlate:
          type: "string"
          example: TXS441
        VehicleStartOdometer:
          type: "string"
          example: 10579758.987
    DriverLogModified:
      properties:
        CoDriverName:
          type: "string"
          example: Jack
        CoDriverID:
          type: "string"
          example: Dr9878
        DistanceUnit:
          type: "string"
          example: Milles
        DriverConfirmed:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: DRV54
        DriverName:
          type: "string"
          example: John
        HOSRuleSet:
          type: "string"
          example: US 8/80 Day NC hrs.
        LogDetails:
          $ref: "#/components/schemas/DriverLogDetailModified"
          example: 
        ReportDateTime:
          type: string
          format: datetime
          example: 2024-05-31 11:20:00
        SensorFailure:
          type: "boolean"
          example: false
        ShippingInformation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        TimeZone:
          type: "string"
          example: CTS
        TrailerID:
          type: "string"
          example: TR6524
        TrailerLicensePlate:
          type: "string"
          example: AB123CD
        VehicleID:
          type: "string"
          example: VHC17
        VehicleLicensePlate:
          type: "string"
          example: TXS441
    DriverLogModifiedV2:
      properties:
        CoDriverName:
          type: "string"
          example: Jack
        CoDriverID:
          type: "string"
          example: DVR62
        DistanceUnit:
          type: "string"
          example: Milles
        DriverConfirmed:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: DRV8954
        DriverName:
          type: "string"
          example: John
        HOSRuleSet:
          type: "string"
          example: US 8/80 Day NC hrs.
        ReportDateTime:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        SensorFailure:
          type: "boolean"
          example: false
        ShippingInformation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        TimeZone:
          type: "string"
          example: CTS
        TrailerID:
          type: "string"
          example: TR95
        TrailerLicensePlate:
          type: "string"
          example: AB123CD
        VehicleID:
          type: "string"
          example: VH123
        VehicleLicensePlate:
          type: "string"
          example: TXS441
        LogDetails:
          $ref: "#/components/schemas/DriverLogDetailModifiedV2"
          example: 
    DriverLogDetailModifiedV2:
      properties:
        RecordTimeUTC:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
    DriverLogV3:
      properties:
        CanadianRegistrationNumber:
          type: "string"
          example: 1234
        CarrierAddress:
          type: "string"
          example: 060418  ep, British Columbia G8T6N3
        CarrierDotNumber:
          type: "string"
          example: 064018
        Carrier:
          type: "string"
          example: Carrier Name
        CodriverId:
          type: "string"
          example: DRV98
        CoDriverName:
          type: "string"
          example: Jack
        CurrentLocation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        DistanceEdit:
          type: "boolean"
          example: false
        DistanceUnit:
          type: "string"
          example: Milles
        DriveTimeToday:
          type: integer
          format: int32
          example: 65241
        DriverId:
          type: "string"
          example: DRV46798
        DriverLicenseNumber:
          type: "string"
          example: A1234567
        DriverLicenseState:
          type: "string"
          example: California
        DriverName:
          type: "string"
          example: John
        DataDiagnosticEventIndicatorStatus:
          type: "string"
          example: false
        EldMalfunctionIndicator:
          type: "string"
          example: false
        EldId:
          type: "string"
          example: 216
        EldProvider:
          type: "string"
          example: Omnitrack LCC
        ExemptDriverStatus:
          type: "string"
          example: false
        FleetAddress:
          type: "string"
          example: california street 20 avenue New mexico, New Mexico 87001
        FleetDotNumber:
          type: "string"
          example: 6798
        Fleet:
          type: "string"
          example: Fleet Name
        HosRuleSet:
          type: "string"
          example: US 8/80 Day NC hrs.
        LastResetDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2024-08-22 16:00:46.356
        LogDetails:
          $ref: "#/components/schemas/DriverLogDetailV3"
          example: 
        LoggingPeriodStart:
          type: integer
          format: int32
          example: 324
        OffDutyTimeToday:
          type: integer
          format: int32
          example: 2001
        OnDutyTimeToday:
          type: integer
          format: int32
          example: 2001
        OnDutyTimeWeek:
          type: integer
          format: int32
          example: 10000
        OrganizationId:
          type: "string"
          example: ORG123
        PostResetOnDutyDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2024-08-22 16:00:46.356
        RecordDate:
          type: "string"
          example: 2024-05-29
        ShippingId:
          type: "string"
          example: SHP468
        SleeperBerthTimeToday:
          type: integer
          format: int32
          example: 4800
        StartEndEngineHours:
          type: "string"
          example: 3200
        StartEndOdometer:
          type: "string"
          example: 984321
        StartLocation:
          type: "string"
          example: Pikwitonei, MB R0B 1E0, Canada  Pikwitonei, Prince Edward Island R0B 1E0
        TimeZone:
          type: "string"
          example: CTS
        TotalDistanceDrivingToday:
          type: "string"
          example: 350
        TrailerId:
          type: "string"
          example: TRL324
        TrailerPlate:
          type: "string"
          example: TXS441
        TruckTractorId:
          type: "string"
          example: TRKTRC154
        UnidentifiedDrivingRecords:
          type: "string"
          example: false
        TruckPlate:
          type: "string"
          example: TXS558
        TruckTractorVin:
          type: "string"
          example: 1HGCM82633A123456
    DriverLogV4:
      properties:
        CarrierName:
          type: "string"
          example: Carrier name
        CarrierAddress:
          type: "string"
          example: 060418  ep, British Columbia G8T6N3
        CarrierDOT:
          type: "string"
          example: 064018
        CoDriverName:
          type: "string"
          example: Jack
        CoDriverID:
          type: "string"
          example: DRV798
        DistanceEdit:
          type: "boolean"
          example: false
        DistanceUnit:
          type: "string"
          example: Milles
        DriverConfirmed:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: DRV321
        DriverName:
          type: "string"
          example: John
        DriveTimeToday:
          type: integer
          format: int32
          example: 214
        EditFlag:
          type: "boolean"
          example: false
        FleetName:
          type: "string"
          example: Fleet Name
        FleetAddress:
          type: "string"
          example: 060418  ep, British Columbia G8T6N3
        FleetDOT:
          type: "string"
          example: 654
        FromLocation:
          type: "string"
          example: 060418  ep, British Columbia G8T6N3
        HOSRuleSet:
          type: "string"
          example: US 8/80 Day NC hrs
        LastResetDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        LogDetails:
          $ref: "#/components/schemas/DriverLogDetailV4"
          example: 
        OffDutyTimeToday:
          type: integer
          format: int32
          example: 2000
        OnDutyTimeToday:
          type: integer
          format: int32
          example: 4000
        OnDutyTimeWeek:
          type: integer
          format: int32
          example: 10000
        ReportDateTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        SensorFailure:
          type: "boolean"
          example: false
        ShippingInformation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        SleeperBerthTimeToday:
          type: integer
          format: int32
          example: 8000
        TimeZone:
          type: "string"
          example: CTS
        ToLocation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        TrailerID:
          type: "string"
          example: TRL321
        TrailerLicensePlate:
          type: "string"
          example: TXS441
        RemainingWeeklyDutyTime:
          type: integer
          format: int32
          example: 7462
        TotalDistanceToday:
          type: number
          format: double
          example: 180
        TotalViolationTimeToday:
          type: integer
          format: int32
          example: 0
        VehicleEndOdometer:
          type: "string"
          example: 3216
        VehicleID:
          type: "string"
          example: VH74
        VehicleLicensePlate:
          type: "string"
          example: TXS441
        VehicleStartOdometer:
          type: "string"
          example: 1250
    DriverLogModifiedV4:
      properties:
        CoDriverName:
          type: "string"
          example: Jack
        CoDriverID:
          type: "string"
          example: DVR234
        DistanceUnit:
          type: "string"
          example: Milles
        DriverConfirmed:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: DRV9
        DriverName:
          type: "string"
          example: John
        HOSRuleSet:
          type: "string"
          example: US 8/80 Day NC hrs.
        LogDetails:
          $ref: "#/components/schemas/DriverLogDetailModifiedV4"
          example: 
        ReportDateTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        SensorFailure:
          type: "boolean"
          example: false
        ShippingInformation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        TimeZone:
          type: "string"
          example: CTS
        TrailerID:
          type: "string"
          example: T54
        TrailerLicensePlate:
          type: "string"
          example: AB123CD
        VehicleID:
          type: "string"
          example: V9
        VehicleLicensePlate:
          type: "string"
          example: TXS441
    DriverLogV5:
      properties:
        CarrierName:
          type: "string"
          example: Carrier name
        CarrierAddress:
          type: "string"
          example: 060418  ep, British Columbia G8T6N3
        CarrierDOT:
          type: "string"
          example: 064018
        CoDriverName:
          type: "string"
          example: Jack
        CoDriverID:
          type: "string"
          example: DRV798
        DistanceEdit:
          type: "boolean"
          example: false
        DistanceUnit:
          type: "string"
          example: Milles
        DriverConfirmed:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: DRV321
        DriverName:
          type: "string"
          example: John
        DriveTimeToday:
          type: integer
          format: int32
          example: 214
        EditFlag:
          type: "boolean"
          example: false
        FleetName:
          type: "string"
          example: Fleet Name
        FleetAddress:
          type: "string"
          example: 060418  ep, British Columbia G8T6N3
        FleetDOT:
          type: "string"
          example: 654
        FromLocation:
          type: "string"
          example: 060418  ep, British Columbia G8T6N3
        HOSRuleSet:
          type: "string"
          example: US 8/80 Day NC hrs
        LastResetDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        LogDetails:
          $ref: "#/components/schemas/DriverLogDetailV5"
          example: 
        OffDutyTimeToday:
          type: integer
          format: int32
          example: 2000
        OnDutyTimeToday:
          type: integer
          format: int32
          example: 4000
        OnDutyTimeWeek:
          type: integer
          format: int32
          example: 10000
        ReportDateTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        SensorFailure:
          type: "boolean"
          example: false
        ShippingInformation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        SleeperBerthTimeToday:
          type: integer
          format: int32
          example: 8000
        TimeZone:
          type: "string"
          example: CTS
        ToLocation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        TrailerID:
          type: "string"
          example: TRL321
        TrailerLicensePlate:
          type: "string"
          example: TXS441
        RemainingWeeklyDutyTime:
          type: integer
          format: int32
          example: 7462
        TotalDistanceToday:
          type: number
          format: double
          example: 180
        TotalViolationTimeToday:
          type: integer
          format: int32
          example: 0
        VehicleEndOdometer:
          type: "string"
          example: 3216
        VehicleID:
          type: "string"
          example: VH74
        VehicleLicensePlate:
          type: "string"
          example: TXS441
        VehicleStartOdometer:
          type: "string"
          example: 1250
    DriverLogModifiedV5:
      properties:
        CoDriverName:
          type: "string"
          example: Jack
        CoDriverID:
          type: "string"
          example: DVR234
        DistanceUnit:
          type: "string"
          example: Milles
        DriverConfirmed:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: DRV9
        DriverName:
          type: "string"
          example: John
        HOSRuleSet:
          type: "string"
          example: US 8/80 Day NC hrs.
        LogDetails:
          $ref: "#/components/schemas/DriverLogDetailModifiedV5"
          example: 
        ReportDateTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        SensorFailure:
          type: "boolean"
          example: false
        ShippingInformation:
          type: "string"
          example: 717 N Harwood St edited Dallas, Texas 75201
        TimeZone:
          type: "string"
          example: CTS
        TrailerID:
          type: "string"
          example: T54
        TrailerLicensePlate:
          type: "string"
          example: AB123CD
        VehicleID:
          type: "string"
          example: V9
        VehicleLicensePlate:
          type: "string"
          example: TXS441
    DriverStatus:
      properties:
        BerthTimeToday:
          type: integer
          format: int32
          example: 800
        DriveTimeToday:
          type: integer
          format: int32
          example: 1000
        DriverFirstName:
          type: "string"
          example: John
        DriverID:
          type: "string"
          example: Driver123
        DriverLastName:
          type: "string"
          example: Smith
        DriverSID:
          type: integer
          format: int64
          example: 87
        DutyTimeAccumulatedThisWeek:
          type: integer
          format: int32
          example: 7425
        IsLoggedIn:
          type: "boolean"
          example: true
        LastDutyStatusChangeDateTime:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        LastKnownDutyStatus:
          type: "string"
          example: On Duty
        LastLoginDateTime:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        LastLogoutDateTime:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        LastResetDateTimeBegan:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        NextAvailableResetPeriod:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        OffDutyTimeToday:
          type: integer
          format: int32
          example: 500
        OnDutyTimeToday:
          type: integer
          format: int32
          example: 1500
        OrganizationID:
          type: "string"
          example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
        OrganizationName:
          type: "string"
          example: Organization Name
        OrganizationSID:
          type: integer
          format: int64
          example: 871
        PostResetOnDutyDateTime:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        PLMEnd:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        PLMStart:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        RecapTomorrow:
          type: "string"
          example: String
        ResetCompleteOn:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        RemainingDriveTimeToday:
          type: integer
          format: int32
          example: 520
        RemainingDutyTimeThisWeek:
          type: integer
          format: int32
          example: 7400
        RemainingDutyTimeToday:
          type: integer
          format: int32
          example: 402
        RuleSet:
          type: "string"
          example: 10
        VehicleName:
          type: "string"
          example: Vehicle Name
        ModifiedDateTime:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
    VehicleBreadcrumb:
      properties:
        BreadcrumbIdentity:
          type: "string"
          example: a3c5d0f1-3d2c-4eaf-b945-204e579d4c1f
        VehicleSID:
          type: integer
          format: int64
          example: 12345
        VehicleName:
          type: "string"
          example: Truck A1
        DriverSID:
          type: integer
          format: int64
          example: 67890
        DriverID:
          type: "string"
          example: f9a0e865-4e64-4425-bc6f-5a9d8b7b8047
        DriverName:
          type: "string"
          example: John Doe
        OrganizationSID:
          type: integer
          format: int64
          example: 98765
        OrganizationName:
          type: "string"
          example: XYZ Logistics
        Latitude:
          type: number
          format: double
          example: 40.7128
        Longitude:
          type: number
          format: double
          example: -74.0060
        Location:
          type: "string"
          example: New York HQ
        Odometer:
          type: number
          format: double
          example: 15000
        IgnitionStatus:
          type: "string"
          example: On
        Motion:
          type: "string"
          example: Moving
        Heading:
          type: number
          format: double
          example: 180
        Direction:
          type: "string"
          example: North
        RoadSpeed:
          type: number
          format: double
          example: 65
        GPSSpeed:
          type: number
          format: double
          example: 60
        GPSDateTime:
          type: string
          format: datetime
          example: 2025-01-07T12:00:00
        OrganizationID:
          type: "string"
          example: f7d9e2b1-4c2b-44a5-9f84-214b56be5e6d
        ModifiedDateTime:
          type: string
          format: datetime
          example: 2025-01-07T12:00:00
        EngineHours:
          type: number
          format: double
          example: 1200
        EngineSpeed:
          type: number
          format: double
          example: 2500
    VehicleStatus:
      properties:
        Direction:
          type: "string"
          example: San Francisco
        DriverID:
          type: "string"
          example: Driver123
        DriverName:
          type: "string"
          example: John
        DriverOrganizationName:
          type: "string"
          example: Organization Name
        DriverOrganizationSID:
          type: integer
          format: int64
          example: 45
        DriverSID:
          type: integer
          format: int64
          example: 98
        Heading:
          type: number
          format: double
          example: 180
        HosExempt:
          type: "boolean"
          example: true
        LastUpdate:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        MotionState:
          type: "string"
          example: Trop
        Odometer:
          type: number
          format: double
          example: 1072.248
        SiteID:
          type: "string"
          example: 12
        SiteLatitude:
          type: number
          format: double
          example: 44.905895
        SiteLocation:
          type: "string"
          example: USA
        SiteLongitude:
          type: number
          format: double
          example: -93.462544
        SiteOrName:
          type: "string"
          example: San Mateo
        SiteSID:
          type: integer
          format: int64
          example: 212
        Speed:
          type: number
          format: double
          example: 871
        VehicleLatitude:
          type: number
          format: double
          example: 44.905895
        VehicleLongitude:
          type: number
          format: double
          example: -93.462544
        VehicleName:
          type: "string"
          example: Vehicle Name
        VehicleOrganizationName:
          type: "string"
          example: Organization Name
        VehicleOrganizationSID:
          type: integer
          format: int64
          example: 32
        VehicleSID:
          type: integer
          format: int64
          example: 33
        VehicleLocation:
          type: "string"
          example: San Mateo
        IgnitionStatus:
          type: "string"
          example: false
        EngineHours:
          type: number
          format: double
          example: 2
        EngineSpeed:
          type: number
          format: double
          example: 57
    PatchOperation:
      properties:
        Operation:
          type: "string"
          example: Updated
        Path:
          type: "string"
          example: Path
        Value:
          type: "object"
          example: Value
    MotorCarrierResponseMessage:
      properties:
        CarrierIdentity:
          type: string
          format: uuid
          example: d3f29d94-5c8f-4d5b-9241-a3b2f6dcd3d8
        Caption:
          type: "string"
          example: String
        Title:
          type: "string"
          example: Tittle
        Code:
          type: "string"
          example: 200
        ObjectName:
          type: "string"
          example: Message
        Description:
          type: "string"
          example: Vehicle Status
    MotorCarrier:
      properties:
        SID:
          type: integer
          format: int64
          example: 
        CarrierIdentity:
          type: string
          format: uuid
          example: 
        CompanyIdentity:
          type: string
          format: uuid
          example: 
        CarrierName:
          type: "string"
          example: 
        USDotNumber:
          type: "string"
          example: 
        CanadianRegistrationNumber:
          type: "string"
          example: 
        CarrierAddressIdentity:
          type: "string"
          example: 
        CreateDate:
          type: string
          format: datetime
          example: 
        ModifyDate:
          type: string
          format: datetime
          example: 
        IsCurrent:
          type: "boolean"
          example: 
        IsActive:
          type: "boolean"
          example: 
    DailyDetail:
      properties:
        DriverId:
          type: "string"
          example: 550e8400-e29b-41d4-a716-446655440000
        DriverName:
          type: "string"
          example: John Doe
        OrganizationName:
          type: "string"
          example: Acme Corp
        OrganizationId:
          type: "string"
          example: 123e4567-e89b-12d3-a456-426614174000
        UnitOfMeasure:
          type: "string"
          example: Miles
        VehicleName:
          type: "string"
          example: Truck 101
        DailyDetailSegment:
          $ref: "#/components/schemas/DailyMotionSegmentInfo"
          example: 
    Delay:
      properties:
        CompanyID:
          type: "string"
          example: a7f2b8e4-3d9c-4e57-bc21-98f6d5a0e8c1
        CompanyName:
          type: "string"
          example: Xata Logistics Inc.
        OrganizationID:
          type: "string"
          example: 4d0c8f76-64a5-466f-9d7b-29a1ea5f96d2
        OrganizationName:
          type: "string"
          example: North America Freight Solutions
        Name:
          type: "string"
          example: Traffic Congestion
        Description:
          type: "string"
          example: Heavy traffic on the main route is causing a delay of approximately 45 minutes.
        Code:
          type: "string"
          example: DL123
        DutyStatusPrompt:
          type: "string"
          example: Driver on Hold
    Device:
      properties:
        BelongsToDeviceResourceGroups:
          type: array
          items: 
            type: string
          example: ["1234567890", "0987654321"]
        BluetoothAddress:
          type: "string"
          example: 00:1A:7D:DA:71:13
        CarrierDisplayName:
          type: "string"
          example: Xata Logistics Inc.
        CompanyName:
          type: "string"
          example: Xata Corporation
        CreateDate:
          type: "string"
          example: 2024-12-05T10:15:30Z
        Description:
          type: "string"
          example: Primary tracking device.
        DeviceType:
          type: "string"
          example: GPS Tracker
        FixedDisplay:
          type: "string"
          example: true
        IsChanged:
          type: "string"
          example: false
        LastCommunication:
          type: "string"
          example: 2024-12-05T12:00:00Z
        LastDriverID:
          type: "string"
          example: 3f2504e0-4f89-11d3-9a0c-0305e82c3301
        LastDriverName:
          type: "string"
          example: John Doe
        LastVehicleID:
          type: "string"
          example: d2e4a4b2-7c9f-44e2-831d-4f2e8e3f4627
        ModifiedBy:
          type: "string"
          example: Jane Smith
        ModifiedDate:
          type: "string"
          example: 2024-12-05T15:30:00Z
        OrganizationID:
          type: "string"
          example: 550e8400-e29b-41d4-a716-446655440000
        OrganizationName:
          type: "string"
          example: North America Operations
        PhoneNumber:
          type: "string"
          example: +1 (415) 555-5768)
        SendInstallLink:
          type: "string"
          example: true
        Status:
          type: "string"
          example: Active
        StoreGNISFileOnMobile:
          type: "string"
          example: true
        UserDefinedField1:
          type: "string"
          example: Additional Notes 1
        UserDefinedField2:
          type: "string"
          example: Additional Notes 2
        UserDefinedField3:
          type: "string"
          example: Additional Notes 3
        UserDefinedField4:
          type: "string"
          example: Additional Notes 4
        UserDefinedField5:
          type: "string"
          example: Additional Notes 5
        OtNavigation:
          type: "string"
          example: true
        OtNavPreAuthenticated:
          type: "string"
          example: false
        OrganizationSID:
          type: integer
          format: int64
          example: b8fcb3d3-d79a-46c8-bca9-e89b2e9c8d3d
        CarrierSID:
          type: integer
          format: int64
          example: 54
        DeviceTypeSID:
          type: integer
          format: int64
          example: 4
        BelongsToDeviceResourceGroupSIDs:
          type: array
          items: 
            type: number
          example: [1001, 1002, 1003]
    Organization:
      properties:
        OrganizationSid:
          type: integer
          format: int64
          example: 125
        OrganizationName:
          type: "string"
          example: Acme123
        Address1:
          type: "string"
          example: Water Streed
        Address2:
          type: "string"
          example: Flat 2
        Country:
          type: "string"
          example: USA
        City:
          type: "string"
          example: Miami
        State:
          type: "string"
          example: Fl
        PostalCode:
          type: "string"
          example: 33101
        UserDefinedOrganizationId:
          type: "string"
          example: nl9f56d2-45a3-4d8e-83f3-b75c8c6e959h
        BillingOrganizationSid:
          type: integer
          format: int64
          example: 43
        ParentOrganizationSid:
          type: integer
          format: int64
          example: 34
        CarrierName:
          type: "string"
          example: Xatatestcompany
        DotNumber:
          type: "string"
          example: 2316548
        AllowSharedResourceGroup:
          type: "boolean"
          example: true
        AllowSubscriptionChange:
          type: "boolean"
          example: true
        LanguageType:
          type: "string"
          example: English
        TimeZone:
          type: "string"
          example: hl9f56d2-45a3-58gj-59hk-b75c8c6egk58
        UnitOfMeasure:
          type: "string"
          example: 0
        IsActive:
          type: "boolean"
          example: true
        FleetViewRefresh:
          type: integer
          format: int32
          example: 0
        ModifiedBy:
          type: integer
          format: int64
          example: -67
        ModifiedDate:
          type: string
          format: datetime
          example: 2024-05-31T11:20:00
        CreateDate:
          type: string
          format: datetime
          example: 2024-05-31T11:19:00
        BillingOrganizationId:
          type: "string"
          example: ol0556d2-86jf-4d8e-69hk-b75c8c6e03ld
        ParentOrganizationId:
          type: "string"
          example: 8a7e3f1c-9b2d-42a4-b65f-5c74e9e8a7f1
    PerformanceSettings:
      properties:
        OrganizationId:
          type: "string"
          example: org1234
        OrganizationName:
          type: "string"
          example: Xata Corporation
        OfficialStopTime:
          type: integer
          format: int32
          nullable: true
          example: 30
        YardToRoad:
          $ref: "#/components/schemas/YardToRoad"
          example: 
        Fleet:
          $ref: "#/components/schemas/Fleet"
          example: 
        TopSpeed:
          $ref: "#/components/schemas/Bracket"
          example: 
        OptimumRpmThreshold:
          $ref: "#/components/schemas/OptimumRpmThreshold"
          example: 
        AbsHardBrake:
          $ref: "#/components/schemas/AbsHardBrake"
          example: 
        FollowingTimeViolation:
          $ref: "#/components/schemas/FollowingTimeViolation"
          example: 
        ForwardCollisionWarning:
          $ref: "#/components/schemas/ForwardCollisionWarning"
          example: 
        PassiveForwardCollisionWarning:
          $ref: "#/components/schemas/PassiveForwardCollisionWarning"
          example: 
        Overspeed:
          $ref: "#/components/schemas/Overspeed"
          example: 
        ExcessiveOverspeed:
          $ref: "#/components/schemas/ExcessiveOverspeed"
          example: 
        StabilityControl:
          $ref: "#/components/schemas/StabilityControl"
          example: 
        LaneDepartureWarning:
          $ref: "#/components/schemas/LaneDepartureWarning"
          example: 
        PanicEvent:
          $ref: "#/components/schemas/PanicEvent"
          example: 
        ManualEvent:
          $ref: "#/components/schemas/ManualEvent"
          example: 
        WorkAloneEvent:
          $ref: "#/components/schemas/WorkAloneEvent"
          example: 
    OrganizationSetting:
      properties:
        Key:
          type: "string"
          example: DefaultCurrency
        Value:
          type: "string"
          example: USD
    ResourceGroup:
      properties:
        ResourceGroupSid:
          type: integer
          format: int64
          example: 74
        OrganizationSID:
          type: integer
          format: int64
          example: 98
        IsDefaultGroup:
          type: "boolean"
          example: true
        IsSharedResourceGroup:
          type: "boolean"
          example: true
        ResourceGroupName:
          type: "string"
          example: Resource Group Name
        IsActive:
          type: "boolean"
          example: true
        DeviceSidList:
          type: array
          items: 
            type: number
          example: ["1","2","3"]
        DriverSidList:
          type: array
          items: 
            type: number
          example: ["1","2","3"]
        SiteSidList:
          type: array
          items: 
            type: number
          example: ["1","2","3"]
        TrailerSidList:
          type: array
          items: 
            type: number
          example: 10
        UserSidList:
          type: array
          items: 
            type: number
          example: ["1","2","3"]
        VehicleSidList:
          type: array
          items: 
            type: number
          example: ["1","2","3"]
        ModifiedBy:
          type: integer
          format: int64
          example: 10
        ModifiedDate:
          type: string
          format: datetime
          example: 2024-08-22 16:00:46.356
        OrganizationID:
          type: "string"
          example: 10
        DeviceNumberList:
          type: array
          items: 
            type: string
          example: ["(555) 123-4567","(555) 987-6543","(555) 432-1876"]
        DriverIdList:
          type: array
          items: 
            type: string
          example: ["Driver1","Driver2","Driver3"]
        SiteIdList:
          type: array
          items: 
            type: string
          example: ["1","2","3"]
        TrailerIdList:
          type: array
          items: 
            type: string
          example: ["1","2","3"]
        UserIdList:
          type: array
          items: 
            type: string
          example: ["1","2","3"]
        VehicleIdList:
          type: array
          items: 
            type: string
          example: ["1","2","3"]
    Route:
      properties:
        CargoOption:
          type: "string"
          example: General Cargo
        CoDriverID:
          type: "string"
          example: b467d6f2-4b3b-4ed5-bc5a-7980d58a1283
        CompanyID:
          type: "string"
          example: d1e92b58-3d0c-4a74-95c9-4b9c12abf48a
        CompanyName:
          type: "string"
          example: Omnitracs Logistics Inc.
        CreateDate:
          type: "string"
          example: 2025-01-01T10:15:00Z
        Description:
          type: "string"
          example: This route is for urban deliveries.
        EndDateTime:
          type: "string"
          example: 2025-01-02T15:30:00Z
        ModifiedBy:
          type: "string"
          example: John Doe
        ModifiedDate:
          type: "string"
          example: 2025-01-02T16:45:00Z
        OrganizationID:
          type: "string"
          example: 3f7812a8-87b5-4d3d-95e8-715cdb8f6a0b
        OrganizationName:
          type: "string"
          example: Omnitracs Fleet Management
        ResourceGroupIDList:
          type: array
          items: 
            type: string
          example: ["e8a47d30-6c09-4b72-8a09-73e9e70f0f58", "bbf3cdd3-e9c5-4bfe-b2d8-688d0f143b28", "a7ed72a5-47a7-478d-b0b2-3f34bbdbd8cd"]
        RouteID:
          type: "string"
          example: a1529e47-15d6-4dbe-a0b3-73f24fdf8a51
        RouteType:
          type: "string"
          example: Long Haul
        StartDateTime:
          type: "string"
          example: 2025-01-01T08:00:00Z
        StateOrProvince:
          type: "string"
          example: Texas
        StopList:
          $ref: "#/components/schemas/RouteStop"
          example: 
        TripList:
          $ref: "#/components/schemas/RouteTrip"
          example: 
        UserDefinedField1:
          type: "string"
          example: Custom Field 1
        UserDefinedField2:
          type: "string"
          example: Custom Field 2
        UserDefinedField3:
          type: "string"
          example: Custom Field 3
        UserDefinedField4:
          type: "string"
          example: Custom Field 4
        UserDefinedField5:
          type: "string"
          example: Custom Field 5
        TemplateRequired:
          type: "string"
          example: Yes
        RouteTemplate:
          type: "string"
          example: Standard Route Template
        OutboundSID:
          type: "string"
          example: c1237e58-5b6a-4fde-8012-3b7298efc891
        InboundFormNumbers:
          type: array
          items: 
            type: string
          example: ["Inbound123", "Inbound456"]
    RouteResponseMessage:
      properties:
        Caption:
          type: "string"
          example: Route operation successful
        Code:
          type: "string"
          example: 200
        Description:
          type: "string"
          example: The specified route was deleted successfully.
        RouteName:
          type: "string"
          example: NorthEast Delivery Route
        RouteID:
          type: "string"
          example: b46f1a2b-bb42-45f2-94f3-6c2e1fbbd3a7
        Title:
          type: "string"
          example: Delete Route
    RouteV2:
      properties:
        CargoOption:
          type: "string"
          example: General Cargo
        CoDriverID:
          type: "string"
          example: b467d6f2-4b3b-4ed5-bc5a-7980d58a1283
        CompanyID:
          type: "string"
          example: d1e92b58-3d0c-4a74-95c9-4b9c12abf48a
        CompanyName:
          type: "string"
          example: Omnitracs Logistics Inc.
        CreateDate:
          type: "string"
          example: 2025-01-01T10:15:00Z
        Description:
          type: "string"
          example: This route is for urban deliveries.
        EndDateTime:
          type: "string"
          example: 2025-01-02T15:30:00Z
        ModifiedBy:
          type: "string"
          example: John Doe
        ModifiedDate:
          type: "string"
          example: 2025-01-02T16:45:00Z
        OrganizationID:
          type: "string"
          example: 3f7812a8-87b5-4d3d-95e8-715cdb8f6a0b
        OrganizationName:
          type: "string"
          example: Omnitracs Fleet Management
        ResourceGroupIDList:
          type: array
          items: 
            type: string
          example: ["e8a47d30-6c09-4b72-8a09-73e9e70f0f58", "bbf3cdd3-e9c5-4bfe-b2d8-688d0f143b28", "a7ed72a5-47a7-478d-b0b2-3f34bbdbd8cd"]
        RouteID:
          type: "string"
          example: a1529e47-15d6-4dbe-a0b3-73f24fdf8a51
        RouteType:
          type: "string"
          example: Long Haul
        StartDateTime:
          type: "string"
          example: 2025-01-01T08:00:00Z
        StateOrProvince:
          type: "string"
          example: Texas
        StopList:
          $ref: "#/components/schemas/RouteStopV2"
          example: 
        TripList:
          $ref: "#/components/schemas/RouteTrip"
          example: 
        UserDefinedField1:
          type: "string"
          example: Custom Field 1
        UserDefinedField2:
          type: "string"
          example: Custom Field 2
        UserDefinedField3:
          type: "string"
          example: Custom Field 3
        UserDefinedField4:
          type: "string"
          example: Custom Field 4
        UserDefinedField5:
          type: "string"
          example: Custom Field 5
        TemplateRequired:
          type: "string"
          example: Yes
        RouteTemplate:
          type: "string"
          example: Standard Route Template
        OutboundSID:
          type: "string"
          example: c1237e58-5b6a-4fde-8012-3b7298efc891
        InboundFormNumbers:
          type: array
          items: 
            type: string
          example: ["Inbound123", "Inbound456"]
    Site:
      properties:
        Address:
          type: "string"
          example: 1234 Elm St, Springfield, IL
        ArrivalGeoCodeType:
          type: "string"
          example: GPS
        ArrivalPolygonPoints:
          type: "string"
          example: Point1, Point2, Point3
        ArrivalRadius:
          type: number
          format: double
          example: 5.0
        City:
          type: "string"
          example: Springfield
        Country:
          type: "string"
          example: USA
        CreateDate:
          type: string
          format: datetime
          example: 2024-12-05T14:30:00
        DepartureGeoCodeType:
          type: "string"
          example: GPS
        DeparturePolygonPoints:
          type: "string"
          example: Point4, Point5, Point6
        DepartureRadius:
          type: number
          format: double
          example: 10.0
        DepartureSameAsArrival:
          type: "boolean"
          example: true
        DeliveryWindows:
          $ref: "#/components/schemas/DeliveryWindow"
          example: 
        Latitude:
          type: number
          format: double
          example: 39.7817
        Longitude:
          type: number
          format: double
          example: -89.6501
        ModifiedBy:
          type: "string"
          example: Admin
        ModifiedDate:
          type: string
          format: datetime
          example: 2024-12-05T15:00:00
        OrganizationID:
          type: "string"
          example: b1e3f7d9-bc9f-47b4-89f7-2bda5b194e6b
        OrganizationName:
          type: "string"
          example: Xata Corporation
        PostalCode:
          type: "string"
          example: 62701
        ResourceGroupIDs:
          type: array
          items: 
            type: string
          example: ["Group1", "Group2"]
        SiteID:
          type: "string"
          example: 5c0b0a0d-9f4a-47e2-9574-dcc1b989290f
        Name:
          type: "string"
          example: Main Warehouse
        SiteType:
          type: "string"
          example: Warehouse
        StateName:
          type: "string"
          example: Illinois
        Measure:
          type: "string"
          example: Kilogram
        UserDefinedField1:
          type: "string"
          example: Additional information for field 1
        UserDefinedField2:
          type: "string"
          example: Additional information for field 2
        UserDefinedField3:
          type: "string"
          example: Additional information for field 3
        UserDefinedField4:
          type: "string"
          example: Additional information for field 4
        UserDefinedField5:
          type: "string"
          example: Additional information for field 5
        TimeZone:
          type: "string"
          example: UTC-5
    SiteV2:
      properties:
        IsYard:
          type: "boolean"
          example: false
    CRMCompanyPackageInfo:
      properties:
        company:
          $ref: "#/components/schemas/CRMCompany"
          example: 
        packages:
          $ref: "#/components/schemas/CRMPackage"
          example: 
    CRMCompany:
      properties:
        CompanyId:
          type: "string"
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        CompanyName:
          type: "string"
          example: Xata Corp
        CompanyLoginId:
          type: "string"
          example: XataUser123
        UserName:
          type: "string"
          example: admin_user
        Password:
          type: "string"
          example: P@ssw0rd!
        CarrierName:
          type: "string"
          example: Xata Logistics
        DotNumber:
          type: "string"
          example: 123456789
        UnitOfMeasure:
          type: "string"
          example: Metric
        Timezone:
          type: "string"
          example: UTC-5
        EmailAddress:
          type: "string"
          example: contact@xata.com
        Country:
          type: "string"
          example: USA
        State:
          type: "string"
          example: California
        City:
          type: "string"
          example: San Francisco
        Zip:
          type: "string"
          example: 94105
        Language:
          type: "string"
          example: English
        Address1:
          type: "string"
          example: 123 Main St
        Address2:
          type: "string"
          example: Suite 400
        Capacity:
          type: "string"
          example: 100
    CRMPackage:
      properties:
        PackageType:
          type: "string"
          example: StandardPackage
        BillingCode:
          type: "string"
          example: BILL12345
        SubscriptionType:
          type: "string"
          example: PremiumSubscription
        CrmSubscriptions:
          $ref: "#/components/schemas/CRMSubscription"
          example: 
    Trailer:
      properties:
        CompanyName:
          type: "string"
          example: Company name
        CreateDate:
          type: string
          format: datetime
          example: 2021-05-26 22:09:14.000
        ModifiedBy:
          type: integer
          format: int64
          example: 587
        ModifiedDate:
          type: string
          format: datetime
          example: 2024-05-26 22:09:14.000
        OrganizationID:
          type: "string"
          example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
        OrganizationName:
          type: "string"
          example: Organization Name
        StateName:
          type: "string"
          example: Nevada
        Status:
          type: "string"
          example: true
        TrailerIdentity:
          type: "string"
          example: 3216984362
        TrailerResourceGroupIDs:
          type: array
          items: 
            type: string
          example: ["1","2","3"]
        TrailerType:
          type: "string"
          example: General
        VIN:
          type: "string"
          example: 1HABC1828JW123456
        UserDefinedField1:
          type: "string"
          example: String
        UserDefinedField2:
          type: "string"
          example: String
        UserDefinedField3:
          type: "string"
          example: String
        UserDefinedField4:
          type: "string"
          example: String
        UserDefinedField5:
          type: "string"
          example: String
    TrailerV2:
      properties:
        LicensePlate:
          type: "string"
          example: TXS441
        Country:
          type: "string"
          example: USA
        Odometer:
          type: integer
          format: int32
          example: 98462198
        SerialNumber:
          type: "string"
          example: 1HABC1828JW123456
    Trip:
      properties:
        CargoOption:
          type: "string"
          example: Option A
        CoDriverID:
          type: "string"
          example: 9a3cd0d4-7f22-4d69-b89a-cf7286a1fc89
        CompanyID:
          type: "string"
          example: a1f957b6-1c0b-4e3e-bd3c-7aef6efb3772
        CompanyName:
          type: "string"
          example: Acme Logistics
        CreateDate:
          type: "string"
          example: 2025-01-07T09:30:00Z
        Description:
          type: "string"
          example: Trip for Delivery
        DriverID:
          type: "string"
          example: f8d3d074-9469-4b84-9ec2-cde85ff0830e
        DriverName:
          type: "string"
          example: John Doe
        Exception:
          type: "string"
          example: No issues encountered
        ModifiedBy:
          type: "string"
          example: Jane Smith
        ModifiedDate:
          type: "string"
          example: 2025-01-07T12:45:00Z
        OrganizationID:
          type: "string"
          example: e7f7dff4-bc19-4b2a-9635-fec623fdd78a
        OrganizationName:
          type: "string"
          example: xyz123
        RouteID:
          type: "string"
          example: d43b1734-d6ef-4d99-b7c9-c8efeb290004
        ResourceGroupIDList:
          type: array
          items: 
            type: string
          example: ["c99f7e3d-9eaf-4e9d-9264-2550a8f71a98", "a072c911-1c30-4a7c-8801-d3674d38b35a"]
        StateProvince:
          type: "string"
          example: California
        Status:
          type: "string"
          example: In Progress
        StopList:
          $ref: "#/components/schemas/TripStop"
          example: 
        TrailerID:
          type: "string"
          example: f2a5a43b-1d58-4c38-b8b5-d0c30707b612
        TripID:
          type: "string"
          example: a6f9cfe1-bb5a-4bfb-a6f3-b18ea4a74de7
        Unplanned:
          type: "boolean"
          example: false
        UserDefinedField1:
          type: "string"
          example: Additional Info 1
        UserDefinedField2:
          type: "string"
          example: Additional Info 2
        UserDefinedField3:
          type: "string"
          example: Additional Info 3
        UserDefinedField4:
          type: "string"
          example: Additional Info 4
        UserDefinedField5:
          type: "string"
          example: Additional Info 5
        VehicleID:
          type: "string"
          example: 5c2f30f1-bfb1-4eae-9c01-eabae6fdabf4
        VIN:
          type: "string"
          example: 1HGCM82633A123456
        StartDateTime:
          type: "string"
          example: 2025-01-07T07:00:00
        EndDateTime:
          type: "string"
          example: 2025-01-07T18:00:00
        TimeZoneId:
          type: "string"
          example: f9a0e865-4e64-4425-bc6f-5a9d8b7b8047
        MessageSIDs:
          type: array
          items: 
            type: string
          example: [123456789, 987654321]
        RequesterInboxSIDs:
          type: array
          items: 
            type: string
          example: [111222333, 444555666]
    TripResponseMessage:
      properties:
        Caption:
          type: "string"
          example: Trip was successfully processed.
        Code:
          type: "string"
          example: 200
        Description:
          type: "string"
          example: The trip was successfully completed.
        TripName:
          type: "string"
          example: Morning Delivery
        TripID:
          type: "string"
          example: f9a0e865-4e64-4425-bc6f-5a9d8b7b8047
        Title:
          type: "string"
          example: Trip Completed Successfully
    User:
      properties:
        CompanyName:
          type: "string"
          example: CompanyName
        BelongsToResourceGroups:
          type: array
          items: 
            type: string
          example: ["1","23"]
        AccountLocked:
          type: "string"
          example: false
        IsAlertSubscriptionsChanged:
          type: "string"
          example: true
        AlertSubscriptionIds:
          type: array
          items: 
            type: string
          example: ["1","2","3"]
        IsAllowedSingleSignOn:
          type: "string"
          example: false
        IsResourceGroupToUserChanged:
          type: "string"
          example: false
        CreateDate:
          type: "string"
          example: 2021-03-15 16:00:46.356
        DashboardName:
          type: "string"
          example: Home
        Email:
          type: "string"
          example: userEmail@xata.com
        IsEmailIncomingDriverMessages:
          type: "string"
          example: true
        IsSendPasswordToEmail:
          type: "string"
          example: false
        EmailRejectedCount:
          type: "string"
          example: 0
        EmailVerificationExpirationDate:
          type: "string"
          example: 2050-03-15 16:00:46.356
        IsEmailVerified:
          type: "string"
          example: true
        EmailVerificationKey:
          type: "string"
          example: 712AVD03-0974-135G-907V-7D03E6J24410
        FirstName:
          type: "string"
          example: John
        Language:
          type: "string"
          example: 1
        LastLogin:
          type: "string"
          example: 2024-11-15 16:00:46.356
        LastName:
          type: "string"
          example: Doe
        MiddleName:
          type: "string"
          example: F.
        ModifiedBy:
          type: "string"
          example: 10
        ModifiedDate:
          type: "string"
          example: 2024-08-22 16:00:46.356
        OrganizationID:
          type: "string"
          example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
        OrganizationName:
          type: "string"
          example: Organization Name
        EncryptedPassword:
          type: "string"
          example: A1B2C3D4E5F6A7B8C9D0E1F2A3B4C5D6
        PasswordNeverExpires:
          type: "string"
          example: false
        ScheduleReportSubscriptions:
          type: array
          items: 
            type: string
          example: ["1","2","3"]
        IsScheduledReportSubscriptionsChanged:
          type: "string"
          example: false
        IsSendAlertsToEmail:
          type: "string"
          example: email2send@xata.com
        IsSendAlertsToMessageInbox:
          type: "string"
          example: true
        Status:
          type: "string"
          example: 1
        UserRole:
          type: "string"
          example: Driver
        UserDefinedField1:
          type: "string"
          example: String
        UserDefinedField2:
          type: "string"
          example: String
        UserDefinedField3:
          type: "string"
          example: String
        UserDefinedField4:
          type: "string"
          example: String
        UserDefinedField5:
          type: "string"
          example: String
        UserName:
          type: "string"
          example: UserName
        isAdd:
          type: "boolean"
          example: true
        isUpdate:
          type: "boolean"
          example: true
    FormTemplateContent:
      properties:
        FormNumber:
          type: "string"
          example: Global_DVIR_0003
        Version:
          type: "string"
          example: A
        OrganizationName:
          type: "string"
          example: Organization Name
        FieldType:
          type: "string"
          example: CustomDVIRInspection
        FieldName:
          type: "string"
          example: CustomDVIRInspection
        Sequence:
          type: "string"
          example: 1
        ContainerSequence:
          type: "string"
          example: 0
        Required:
          type: "string"
          example: true
        LengthType:
          type: "string"
          example: 1
        FieldLength:
          type: "string"
          example: 10
        Label:
          type: "string"
          example: Stop Arrival Geo Code Type
        ReadOnly:
          type: "string"
          example: true
        PageID:
          type: integer
          format: int32
          nullable: true
          example: 1
        ExternalID:
          type: "string"
          example: 951A
        DecimalPlaces:
          type: "string"
          example: 0
        HelpTip:
          type: "string"
          example: String
        DefaultValue:
          type: "string"
          example: String
        Hidden:
          type: "string"
          example: false
        ValidationRules:
          type: "string"
          example: Normal
        ValidationMessage:
          type: "string"
          example: String
        PictureFileName:
          type: "string"
          example: Picture File Name
        BarcodeScannable:
          type: "string"
          example: String
        AutoFillInFormNumber:
          type: "string"
          example: 10
        AutoFillInFieldName:
          type: "string"
          example: A
        RepeatMin:
          type: "string"
          example: 0
        RepeatMax:
          type: "string"
          example: 100
        ActivityFieldName:
          type: "string"
          example: String
    FormTemplateHeader:
      properties:
        FormTemplateSid:
          type: integer
          format: int64
          example: 762
        FormNumber:
          type: "string"
          example: Global_DVIR_0003
        FormVersion:
          type: "string"
          example: A
        FormTemplateSID:
          type: integer
          format: int64
          example: 321
        FormTitle:
          type: "string"
          example: OTA
        Direction:
          type: "string"
          example: 2
        OrganizationName:
          type: "string"
          example: Organization Name
        FormCategory:
          type: "string"
          example: 80
        InProduction:
          type: "string"
          example: true
        Priority:
          type: "string"
          example: 1
        ResourceGroupSIDs:
          type: "string"
          example: 123
        IsScheduledStop:
          type: "string"
          example: true
        ScheduledStopType:
          type: "string"
          example: 1
        Status:
          type: "string"
          example: 1
        Description:
          type: "string"
          example: Description
        ReplyFormSIDs:
          type: "string"
          example: 98
        IsAutomated:
          type: "string"
          example: true
        EventTrigger:
          type: "string"
          example: true
        SubjectDisplayField:
          type: "string"
          example: OTA
        ModifiedBy:
          type: integer
          format: int64
          example: 54
        ModifiedDate:
          type: string
          format: datetime
          example: 2016-03-18 03:17:08
        ReplyFormNumbers:
          type: "string"
          example: tr1ue
        ResourceGroupIDs:
          type: "string"
          example: 98
    FormTemplateCategory:
      properties:
        Sid:
          type: integer
          format: int64
          example: 46
        CategoryId:
          type: "string"
          example: 8cfc68a2-79a5-4970-953b-d2e7288a8b6c
        CategoryName:
          type: "string"
          example: Vehicle Maintenance Forms
        ModifiedBy:
          type: integer
          format: int64
          example: 56
        ModifiedDate:
          type: string
          format: datetime
          example: 2024-12-05T16:30:00
    Vehicle:
      properties:
        SID:
          type: integer
          format: int64
          example: 123456
        VehicleName:
          type: "string"
          example: Ford F-150
        CompanySID:
          type: integer
          format: int64
          example: 435
        CompanyName:
          type: "string"
          example: Xata Transport
        OrganizationSID:
          type: integer
          format: int64
          example: 234
        OrganizationName:
          type: "string"
          example: Xata Logistics
        TGTNumber:
          type: integer
          format: int64
          example: 12345
        OBCType:
          type: "string"
          example: None
        InstallDate:
          type: string
          format: datetime
          example: 2022-03-25T10:30:00
        OwnerOperator:
          type: "boolean"
          example: true
        LicensePlate:
          type: "string"
          example: ABC1234
        Status:
          type: "string"
          example: Active
        ModifiedBy:
          type: integer
          format: int64
          example: 6949
        ModifiedDate:
          type: string
          format: datetime
          example: 2024-12-05T15:00:00
        IFTA:
          type: "boolean"
          example: true
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
        Manufacture:
          type: "string"
          example: Ford
        ManufactureDate:
          type: string
          format: datetime
          example: 2022-01-15
        Model:
          type: "string"
          example: F-150
        HasElectronicEngine:
          type: "boolean"
          example: true
        TransmissionMfg:
          type: "string"
          example: ZF
        TransmissionType:
          type: "string"
          example: Automatic
        HasBerth:
          type: "boolean"
          example: false
        Auxiliary:
          type: "string"
          example: Yes
        FuelDrawCapacity:
          type: integer
          format: int32
          example: 200
        GrossVehicleWeight:
          type: integer
          format: int32
          example: 3500
        StraightTruck:
          type: "boolean"
          example: false
        HP:
          type: integer
          format: int32
          example: 400
        HUT:
          type: "boolean"
          example: true
        PowerAxles:
          type: integer
          format: int32
          example: 2
        Type:
          type: "string"
          example: Truck
        Year:
          type: "string"
          example: 2023
        Odometer:
          type: integer
          format: int32
          example: 15000
        OdometerDate:
          type: string
          format: datetime
          example: 2024-12-05T10:00:00
        UserDefinedField1:
          type: "string"
          example: Custom Field 1 Value
        UserDefinedField2:
          type: "string"
          example: Custom Field 2 Value
        UserDefinedField3:
          type: "string"
          example: Custom Field 3 Value
        UserDefinedField4:
          type: "string"
          example: Custom Field 4 Value
        UserDefinedField5:
          type: "string"
          example: Custom Field 5 Value
        OrganizationID:
          type: "string"
          example: c87f8c42-df0f-4661-8d97-4f84db7d2ed8
        HosExempt:
          type: "boolean"
          example: false
        AllowTrailerInspection:
          type: "boolean"
          example: true
        Country:
          type: "string"
          example: USA
        StateName:
          type: "string"
          example: Illinois
        EldVehicle:
          type: "boolean"
          nullable: true
          example: true
        ResourceGroupIdList:
          type: array
          items: 
            type: string
          example: ["group1", "group2"]
        ManualVIN:
          type: "string"
          example: 1HGBH41JXMN109186
        HasPowerTakeoff:
          type: "boolean"
          example: true
    Driver:
      properties:
        SID:
          type: integer
          format: int64
          example: 654
        DriverID:
          type: "string"
          example: 651
        PayrollOrganizationSID:
          type: "string"
          example: 132
        PayrollSID:
          type: "string"
          example: 1
        CDLNumber:
          type: "string"
          example: E3017639
        MaxConveyanceDistance:
          type: "string"
          example: 7895461285
        EnableBigDay:
          type: "string"
          example: true
        EnablePersonalConveyance:
          type: "string"
          example: true
        EnableDriverPortal:
          type: "string"
          example: true
        EnableDriverDashboard:
          type: "string"
          example: true
        EnableTimeClock:
          type: "string"
          example: true
        Endorsements:
          type: "string"
          example: string
        EnableHOSRule:
          type: "string"
          example: true
        MedicalExp:
          type: "string"
          example: 2025-03-15 16:00:46.356
        UserDefinedField1:
          type: "string"
          example: string
        UserDefinedField2:
          type: "string"
          example: string
        UserDefinedField3:
          type: "string"
          example: string
        UserDefinedField4:
          type: "string"
          example: string
        UserDefinedField5:
          type: "string"
          example: string
        SendInboundMessageTo:
          type: "string"
          example: Company
        UseHOSOrganizationSettings:
          type: "string"
          example: true
        CDLExpiration:
          type: "string"
          example: 2025-03-15 16:00:46.356
        CompanySID:
          type: "string"
          example: 654
        CompanyName:
          type: "string"
          example: Company Name
        OrganizationSID:
          type: integer
          format: int64
          example: 854
        OrganizationName:
          type: "string"
          example: Organization Name
        Password:
          type: "string"
          example: Passwprd@1234
        FirstName:
          type: "string"
          example: Tonny
        LastLogin:
          type: "string"
          example: 2025-03-15 16:00:46.356
        LastName:
          type: "string"
          example: Stark
        Language:
          type: "string"
          example: English
        MiddleName:
          type: "string"
          example: F.
        CellPhone:
          type: "string"
          example: (555) 123-4567
        Status:
          type: "string"
          example: Active
        HomeTelephone:
          type: "string"
          example: (555) 123-4567
        UserName:
          type: "string"
          example: DriverUserName
        ModifiedBy:
          type: "string"
          example: 8
        ModifiedDate:
          type: "string"
          example: 2024-03-15 16:00:46.356
        CreateDate:
          type: "string"
          example: 2021-03-15 16:00:46.356
        OrganizationID:
          type: "string"
          example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
        SendInboundMessageToID:
          type: "string"
          example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
        Country:
          type: "string"
          example: USA
        StateName:
          type: "string"
          example: Nevada
        ELDExempt:
          type: "boolean"
          nullable: true
          example: true
        ELDExemptExplanation:
          type: "string"
          example: string
        ELDExemptVehicleInspection:
          type: "string"
          example: 0
        EnableYardMove:
          type: "boolean"
          example: true
        EnableSplitBerth:
          type: "string"
          example: false
        WillPair:
          type: "string"
          example: true
        ResourceGroupIDList:
          type: array
          items: 
            type: string
          example: ["1","2","3"]
        AllowDriverCarrierChange:
          type: "boolean"
          example: false
    FormData:
      properties:
        FormMessageData:
          $ref: "#/components/schemas/FieldData"
          example: 
    Stop:
      properties:
        StopSeqenceNumber:
          type: "string"
          example: 18
        SiteName:
          type: "string"
          example: Town of Washington,Wisconsin
        CityStates:
          type: "string"
          example: Wisconsin
        DateTime:
          type: "string"
          example: 2024-08-22 16:00:46.356
        PlannedMiles:
          type: number
          format: double
          example: 200
        ActualMiles:
          type: number
          format: double
          example: 70
        MilesVariance:
          type: number
          format: double
          example: 12
        PlannedTime:
          type: integer
          format: int32
          example: 5000
        ActualTime:
          type: integer
          format: int32
          example: 1000
        TimeVariance:
          type: integer
          format: int32
          example: 50
    StopTotals:
      properties:
        PlannedMiles:
          type: number
          format: double
          example: 10.0
        ActualMiles:
          type: number
          format: double
          example: 30.5
        MilesVariance:
          type: number
          format: double
          example: 10
        PlannedTime:
          type: integer
          format: int32
          example: 5
        ActualTime:
          type: integer
          format: int32
          example: 4
        TimeVariance:
          type: integer
          format: int32
          example: 0
    StandardsEvent:
      properties:
        Time:
          type: "string"
          example: 2025-03-25T08:30:00
        Location:
          type: "string"
          example: New York
        SiteName:
          type: "string"
          example: Site A
        SiteID:
          type: "string"
          example: 12345
        Activity:
          type: "string"
          example: Loading
        Distance:
          type: number
          format: double
          example: 150.5
        Cargo:
          type: number
          format: double
          example: 2000
        LegTime:
          type: integer
          format: int32
          example: 120
        CargoTime:
          type: integer
          format: int32
          example: 60
        Rate:
          type: number
          format: double
          example: 45.75
    StandardsEventTotals:
      properties:
        Distance:
          type: number
          format: double
          example: 120.5
        Cargo:
          type: number
          format: double
          example: 1500
        LegTime:
          type: integer
          format: int32
          example: 90
        CargoTime:
          type: integer
          format: int32
          example: 45
        Rate:
          type: number
          format: double
          example: 50.75
    PlanEvent:
      properties:
        Time:
          type: "string"
          example: 2025-03-25 08:00
        Location:
          type: "string"
          example: New York
        SiteName:
          type: "string"
          example: Site A
        SiteID:
          type: "string"
          example: 1234
        Activity:
          type: "string"
          example: Loading
        Distance:
          type: number
          format: double
          example: 250.75
        Cargo:
          type: number
          format: double
          example: 1500
        LegTime:
          type: integer
          format: int32
          example: 120
        CargoTime:
          type: integer
          format: int32
          example: 100
        Rate:
          type: number
          format: double
          example: 60.5
    PlanEventTotals:
      properties:
        Distance:
          type: number
          format: double
          example: 500.25
        Cargo:
          type: number
          format: double
          example: 1200
        LegTime:
          type: integer
          format: int32
          example: 180
        CargoTime:
          type: integer
          format: int32
          example: 150
        Rate:
          type: number
          format: double
          example: 55.75
    ActualEvent:
      properties:
        Time:
          type: "string"
          example: 2025-03-25T14:30:00
        Location:
          type: "string"
          example: New York
        SiteName:
          type: "string"
          example: Site1
        SiteID:
          type: "string"
          example: 12345
        ManualSiteID:
          type: "string"
          example: M-001
        Activity:
          type: "string"
          example: Loading
        Distance:
          type: number
          format: double
          example: 120.5
        Cargo:
          type: number
          format: double
          example: 800.0
        LegTime:
          type: integer
          format: int32
          example: 150
        CargoTime:
          type: integer
          format: int32
          example: 130
        DelayTime:
          type: integer
          format: int32
          example: 20
        Rate:
          type: number
          format: double
          example: 50.0
    ActualEventTotals:
      properties:
        Distance:
          type: number
          format: double
          example: 150.0
        Cargo:
          type: number
          format: double
          example: 1000.0
        LegTime:
          type: integer
          format: int32
          example: 180
        CargoTime:
          type: integer
          format: int32
          example: 160
        DelayTime:
          type: integer
          format: int32
          example: 30
        Rate:
          type: number
          format: double
          example: 75.0
    RouteStatus:
      properties:
        OrganizationName:
          type: "string"
          example: Organization Name
        OrganizationID:
          type: "string"
          example: 830be7d9-acbc-4d08-bbd2-cf5bae913b6c
        RouteID:
          type: "string"
          example: 74
        StartDate:
          type: "string"
          example: 2024-04-15 16:00:46.356
        EndDate:
          type: "string"
          example: 2024-04-15 18:40:46.356
        VehicleID:
          type: "string"
          example: 571
        Status:
          type: "string"
          example: On Duty
        DriverName:
          type: "string"
          example: John
        CoDriverName:
          type: "string"
          example: Jack
        PlannedCommerceStops:
          type: integer
          format: int32
          nullable: true
          example: 2
        CompletedCommerceStops:
          type: integer
          format: int32
          nullable: true
          example: 1
        PlannedDistance:
          type: number
          format: double
          nullable: true
          example: 387.21
        ActualDistance:
          type: number
          format: double
          nullable: true
          example: 240.87
        PlannedTime:
          type: "string"
          example: 7043
        ActualTime:
          type: "string"
          example: 3500
        UnplannedCommerceStops:
          type: integer
          format: int32
          nullable: true
          example: 1
        OutOfSequence:
          type: "boolean"
          example: false
        Exceptions:
          type: "boolean"
          example: false
    Activity:
      properties:
        Date:
          type: "string"
          example: 2025-03-25
        VehicleID:
          type: "string"
          example: VH123
        RouteID:
          type: "string"
          example: RT456
        DriverName:
          type: "string"
          example: John Doe
        CargoBill:
          type: "string"
          example: CB789
        ActivityType:
          type: "string"
          example: Delivery
        Quantity:
          type: "string"
          example: 100
        PlannedArrivalTime:
          type: "string"
          example: 10:00 AM
        ActualArrivalTime:
          type: "string"
          example: 10:15 AM
        ArrivalVariance:
          type: "string"
          example: 15 minutes
        PlannedStopDuration:
          type: "string"
          example: 30 minutes
        ActualStopDuration:
          type: "string"
          example: 25 minutes
        StopDurationVariance:
          type: "string"
          example: -5 minutes
        IdleTime:
          type: "string"
          example: 10 minutes
        Variance:
          type: "string"
          example: 5 minutes
    CarrierLocation:
      properties:
        Address1:
          type: "string"
          example: 00 Terry A Francois Blvd, San Francisco
        Address2:
          type: "string"
          example: 00 Terry A Francois Blvd, San Francisco
        City:
          type: "string"
          example: San Francisco
        Country:
          type: "string"
          example: USA
        Phone:
          type: "string"
          example: +555 123-4567
        State:
          type: "string"
          example: California
        Zip:
          type: "string"
          example: 94102
    LocationInfo:
      properties:
        Latitude:
          type: number
          format: float
          example: 37.4219970703125
        LocationName:
          type: "string"
          example: 4km N Mountain View CA
        Longitude:
          type: number
          format: float
          example: -122.08399963378906
        PositionCode:
          type: "string"
          example: 0
        ReducedPrecision:
          type: "boolean"
          example: false
    Location:
      properties:
        Latitude:
          type: number
          format: float
          example: 37.4219970703125
        LocationName:
          type: "string"
          example: 4km N Mountain View CA
        Longitude:
          type: number
          format: float
          example: -122.08399963378906
        PositionCode:
          type: "string"
          example: 0
        ReducedPrecision:
          type: "boolean"
          example: false
    DriverStatusLocationInfo:
      properties:
        Latitude:
          type: number
          format: float
          example: 40.7128
        LocationName:
          type: "string"
          example: 1km E Mississauga ON
        Longitude:
          type: number
          format: float
          example: -74.0060
        PositionCode:
          type: "string"
          example: 0
    TerminalLocation:
      properties:
        Address1:
          type: "string"
          example: 21mi N Sparta WI
        Address2:
          type: "string"
          example: 21mi N Sparta WI
        City:
          type: "string"
          example: Sparta
        Country:
          type: "string"
          example: USA
        Latitude:
          type: number
          format: float
          example: 44.246543884277344
        Longitude:
          type: number
          format: float
          example: -90.74425506591797
        Phone:
          type: "string"
          example: +555 123-4567
        State:
          type: "string"
          example: Wisconsin
        Zip:
          type: "string"
          example: 54656
    DriverOrganizationTimeZone:
      properties:
        ObserveDst:
          type: "boolean"
          example: false
        TimeZoneName:
          type: "string"
          example: UTC
    UnassignedVehicleActivitySegment:
      properties:
        Comment:
          type: "string"
          example: This is a coment
        SegmentSid:
          type: integer
          format: int64
          example: 321
        StartDateTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        EndDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        EventType:
          type: "string"
          example: 0
        ReclassifiedBy:
          type: "string"
          example: Ma
        ReclassifiedDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        Latitude:
          type: number
          format: double
          example: 37.5483
        Longitude:
          type: number
          format: double
          example: -122.3133
        SiteId:
          type: "string"
          example: CompanyName
        SiteName:
          type: "string"
          example: 965 Prairie Center Dr.
    UnassignedVehicleActivitySegmentV2:
      properties:
        ClassificationId:
          type: integer
          format: int32
          example: 123
        ClassificationName:
          type: "string"
          example: Unassigned
        Comment:
          type: "string"
          example: This is a comment
        SegmentSid:
          type: integer
          format: int64
          example: 321
        StartDateTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        EndDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        EventType:
          type: "string"
          example: 0
        ReclassifiedBy:
          type: "string"
          example: Max
        ReclassifiedDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        Latitude:
          type: number
          format: double
          example: 37.5483
        Longitude:
          type: number
          format: double
          example: -122.3133
        SiteId:
          type: "string"
          example: 87
        SiteName:
          type: "string"
          example: 965 Prairie Center Dr.
    CriticalEventDetail:
      properties:
        EventFlags:
          $ref: "#/components/schemas/CriticalEventDetailFlags"
          example: 
        FollowingTime:
          type: number
          format: double
          example: 15.2
        Time:
          type: number
          format: double
          example: 120.5
        Latitude:
          type: number
          format: double
          example: 37.7749
        Longitude:
          type: number
          format: double
          example: -122.4194
        Heading:
          type: number
          format: double
          example: 90
        RoadSpeed:
          type: number
          format: double
          example: 55.5
        EngineRPM:
          type: integer
          format: int32
          example: 1800
        PercentThrottle:
          type: number
          format: double
          example: 75
        BrakeStatus:
          type: "string"
          example: Applied
        ClutchStatus:
          type: "string"
          example: Disengaged
        CruiseStatus:
          type: "string"
          example: Engaged
        ABSBrakeControl:
          type: "string"
          example: Activated
        ABSWarningLamp:
          type: "string"
          example: On
        TrailerABSControlStatus:
          type: "string"
          example: Active
        TractorMountedTrailerABSLamp:
          type: "string"
          example: Off
    CriticalEventDetailFlags:
      properties:
        Item:
          type: "object"
          example: ItemName
        LDImminentLeft:
          type: "string"
          example: false
        LDImminentRight:
          type: "string"
          example: false
        LDActualLeft:
          type: "string"
          example: false
        LDActualRight:
          type: "string"
          example: false
        LDDisable:
          type: "string"
          example: false
        ROPEngine:
          type: "string"
          example: false
        ROPBrake:
          type: "string"
          example: false
        YCEngine:
          type: "string"
          example: false
        YCBrake:
          type: "string"
          example: false
        BendixCMT:
          type: "string"
          example: false
        MobileEye:
          type: "string"
          example: false
    CriticalEventVideo:
      properties:
        VideoDate:
          type: string
          format: datetime
          example: 2020-10-10T12:00:00
        VideoStartDate:
          type: string
          format: datetime
          example: 2020-10-10T12:01:00
        VideoEndDate:
          type: string
          format: datetime
          example: 2020-10-10T12:05:00
        VideoLength:
          type: integer
          format: int64
          example: 300
        VideoStatus:
          type: "string"
          example: Completed
        VideoDirection:
          type: "string"
          example: Forward
        VideoPath:
          type: "string"
          example: /videos/critical_event_video.mp4
    BlackBoxDetail:
      properties:
        Time:
          type: number
          format: double
          example: 128.32
        Latitude:
          type: number
          format: double
          example: 44.6784959
        Longitude:
          type: number
          format: double
          example: -91.325957
        Heading:
          type: number
          format: double
          example: 0
        RoadSpeed:
          type: number
          format: double
          example: 57
        EngineRPM:
          type: integer
          format: int32
          example: 2500
        PercentThrottle:
          type: number
          format: double
          example: 0.448
        BrakeStatus:
          type: "string"
          example: 0
        ClutchStatus:
          type: "string"
          example: 0
        CruiseStatus:
          type: "string"
          example: 0
    OperationProfileSpeedBracket:
      properties:
        SpeedBracket:
          type: "string"
          example: 0-20 mph
        Time:
          type: integer
          format: int32
          example: 3600
        PercentageOfTime:
          type: number
          format: double
          example: 15.5
        Distance:
          type: number
          format: double
          example: 120.5
        PercentageOfDistace:
          type: number
          format: double
          example: 120.5
        Fuel:
          type: number
          format: double
          example: 10.5
        PercentageOfFuel:
          type: number
          format: double
          example: 25.0
        FuelEconomy:
          type: number
          format: double
          example: 12.0
        CruiseOnPercentage:
          type: number
          format: double
          example: 70.0
        CruiseFuelEconomy:
          type: number
          format: double
          example: 13.0
        EngineWorkPercentage:
          type: number
          format: double
          example: 80.0
        EngineCoastPercentage:
          type: number
          format: double
          example: 20.0
        DistancePerBrake:
          type: number
          format: double
          example: 500.0
        RPMPercentageLow:
          type: number
          format: double
          example: 30.0
        RPMPercentageHigh:
          type: number
          format: double
          example: 10.0
        RPMPercentageGood:
          type: number
          format: double
          example: 60.0
    OperationProfileSegment:
      properties:
        SegmentType:
          type: "string"
          example: Driving
        StateType:
          type: "string"
          example: Driving
        Time:
          type: integer
          format: int32
          example: 1200
        PercentageOfTime:
          type: number
          format: double
          example: 50.5
        Distance:
          type: number
          format: double
          example: 150.75
        PercentageOfDistance:
          type: number
          format: double
          example: 45.0
        Fuel:
          type: number
          format: double
          example: 25.5
        PercentageOfFuel:
          type: number
          format: double
          example: 60.0
        FuelEconomy:
          type: number
          format: double
          example: 10.5
        StopsAndDelays:
          type: integer
          format: int32
          example: 3
        StopAndDelayAverageTime:
          type: integer
          format: int32
          example: 120
        IdleTime:
          type: integer
          format: int32
          example: 300
        IdleWear:
          type: number
          format: double
          example: 0.05
        IdleFuel:
          type: number
          format: double
          example: 2.0
        PTOTime:
          type: integer
          format: int32
          example: 180
        PTOFuel:
          type: number
          format: double
          example: 4.0
        EngineTime:
          type: integer
          format: int32
          example: 2400
    OperationProfileMotionExceptionSummary:
      properties:
        OverspeedTime:
          type: integer
          format: int32
          example: 120
        OverspeedDistance:
          type: number
          format: double
          example: 150.5
        AverageSpeed:
          type: number
          format: double
          example: 85.5
        HardBrakeCount:
          type: integer
          format: int32
          example: 2
        HighSpeedBrakeDistance:
          type: number
          format: double
          example: 50.0
    InspectionItem:
      properties:
        ApproverName:
          type: "string"
          example: Peter
        CertifiedDate:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        WorkPerformed:
          type: "string"
          example: Change battery
        Status:
          type: "string"
          example: Repaired
        DefectSID:
          type: integer
          format: int64
          example: 63
        DefectName:
          type: "string"
          example: Battery break
        Defect:
          type: "boolean"
          example: true
        Comment:
          type: "string"
          example: This is a comment
        RepairCertified:
          type: "boolean"
          nullable: true
          example: true
        RepairCompleted:
          type: "boolean"
          example: true
        RepairDateTime:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        RepairOrderNumber:
          type: "string"
          example: 872
        RepairPerformedBy:
          type: "string"
          example: Jack
        RepairNotRequired:
          type: "boolean"
          example: false
        RepairNotRequiredComment:
          type: "string"
          example: Battery was changed
    DriverLogDetail:
      properties:
        CityName:
          type: "string"
          example: Dallas
        Comment:
          type: "string"
          example: Comment
        Current:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: DRV6241
        EditedDate:
          type: string
          format: datetime
          nullable: true
          example: 2024-05-31 11:20:0
        EventType:
          type: "string"
          example: Driver duty status changed to Driving
        Latitude:
          type: number
          format: double
          example: 32.7830600
        LocationName:
          type: "string"
          example: 1km E Mississauga ON
        Longitude:
          type: number
          format: double
          example: -96.8066700
        ModifiedDate:
          type: string
          format: datetime
          nullable: true
          example: 2024-05-31 11:20:0
        RecordSID:
          type: "string"
          example: 65165
        RecordTime:
          type: string
          format: datetime
          example: 2024-05-31 11:20:0
        Remark:
          type: "string"
          example: Beginning of Restart Period
        RowID:
          type: "string"
          example: 621
        Sequence:
          type: "string"
          example: String
        SiteID:
          type: "string"
          example: 12
        StateName:
          type: "string"
          example: Texas
    DriverLogDetailV3:
      properties:
        AccumulatedVehicleMiles:
          type: "string"
          example: 32419
        Comment:
          type: "string"
          example: String Comment
        EditedDate:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        ElapsedEngineHours:
          type: "string"
          example: 5
        EngineHours:
          type: "string"
          example: 5
        Event:
          type: "string"
          example: On Duty
        EventCode:
          type: "string"
          example: 1
        Latitude:
          type: number
          format: double
          example: 35.632765
        Location:
          type: "string"
          example: 1901 Deason Dr, Edmond, OK 73013
        Longitude:
          type: number
          format: double
          example: -97.439905
        ModifiedDate:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        Odometer:
          type: integer
          format: int32
          nullable: true
          example: 32198.03
        Origin:
          type: "string"
          example: Automatic recorded by ELD
        RecordSID:
          type: integer
          format: int64
          example: 1
        RecordStatus:
          type: "string"
          example: Active
        Time:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        TimeUTC:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        ID:
          type: "string"
          example: DL798
        SeqID:
          type: integer
          format: int32
          nullable: true
          example: SEQ9841
    DriverLogDetailV4:
      properties:
        CityName:
          type: "string"
          example: Edmond
        Comment:
          type: "string"
          example: String comment
        Current:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: DRV41
        EditedDate:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        EventType:
          type: "string"
          example: On duty
        Latitude:
          type: number
          format: double
          example: 34.671232
        LocationName:
          type: "string"
          example: 1901 Deason Dr, Edmond, OK
        Longitude:
          type: number
          format: double
          example: -97.304582
        ModifiedDate:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        RecordSID:
          type: "string"
          example: 4
        RecordTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        Remark:
          type: "string"
          example: Beginning of Restart Period
        RowID:
          type: "string"
          example: 74
        Sequence:
          type: "string"
          example: String Sequence
        SiteID:
          type: "string"
          example: 654
        StateName:
          type: "string"
          example: Oklahoma
        RecordTimeUTC:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        VehicleID:
          type: "string"
          example: VH78
    DriverLogDetailModifiedV4:
      properties:
        VehicleID:
          type: "string"
          example: VHC321
    DriverLogDetailV5:
      properties:
        CityName:
          type: "string"
          example: Edmond
        Comment:
          type: "string"
          example: String Comment
        Current:
          type: "boolean"
          example: true
        DriverID:
          type: "string"
          example: DRV23
        EditedDate:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        EventType:
          type: "string"
          example: 34.671232
        Latitude:
          type: number
          format: double
          example: 34.671232
        LocationName:
          type: "string"
          example: 1901 Deason Dr, Edmond, OK
        Longitude:
          type: number
          format: double
          example: -97.304582
        ModifiedDate:
          type: string
          format: datetime
          nullable: true
          example: 2021-03-15 16:00:46.356
        RecordSID:
          type: "string"
          example: 8
        RecordTime:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        Remark:
          type: "string"
          example: Beginning of Restart Period
        RowID:
          type: "string"
          example: 654
        Sequence:
          type: "string"
          example: String Sequence
        SiteID:
          type: "string"
          example: S2
        StateName:
          type: "string"
          example: Oklahoma
        RecordTimeUTC:
          type: string
          format: datetime
          example: 2021-03-15 16:00:46.356
        VehicleID:
          type: "string"
          example: VHC1
        Annotations:
          $ref: "#/components/schemas/DriverLogAnnotations"
          example: 
    DriverLogDetailModifiedV5:
      properties:
        Annotations:
          $ref: "#/components/schemas/DriverLogAnnotations"
          example: 
    DailyMotionSegmentInfo:
      properties:
        DateTime:
          type: "string"
          example: 2025-03-25T14:30:00
        Duration:
          type: "string"
          example: 1200
        Distance:
          type: number
          format: float
          nullable: true
          example: 250.5
        Fuel:
          type: number
          format: float
          nullable: true
          example: 45.6
        Jurisdiction:
          type: "string"
          example: USA
        Activity:
          type: "string"
          example: Driving
        Location:
          type: "string"
          example: New York, NY
        RecordSid:
          type: "string"
          example: A12345B
        TimeZone:
          type: "string"
          example: Eastern Standard Time
        Vin:
          type: "string"
          example: 1HGBH41JXMN109186
        ModifiedDateTime:
          type: "string"
          example: 2025-03-25T14:35:00
        Details:
          $ref: "#/components/schemas/DailyMotionSegmentInfoDetailed"
          example: 
    YardToRoad:
      properties:
        Speed:
          type: integer
          format: int32
          nullable: true
          example: 10
        Time:
          type: integer
          format: int32
          nullable: true
          example: 30
    Fleet:
      properties:
        SpeedingGracePeriod:
          type: integer
          format: int32
          nullable: true
          example: 5
        HardBrakeThreshold:
          type: integer
          format: int32
          nullable: true
          example: 8
        SpeedingThreshold:
          type: integer
          format: int32
          nullable: true
          example: 75
    Bracket:
      properties:
        Key:
          type: integer
          format: int32
          example: 1
        Value:
          type: integer
          format: int32
          example: 100
    OptimumRpmThreshold:
      properties:
        High:
          type: integer
          format: int32
          nullable: true
          example: 2000
        Low:
          type: integer
          format: int32
          nullable: true
          example: 800
    AbsHardBrake:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: true
    FollowingTimeViolation:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: true
        OnThreshold:
          type: integer
          format: int32
          nullable: true
          example: 3
        OffThreshold:
          type: integer
          format: int32
          nullable: true
          example: 5
        SecondsThreshold:
          type: integer
          format: int32
          nullable: true
          example: 2
        TimeThreshold:
          type: integer
          format: int32
          nullable: true
          example: 10
    ForwardCollisionWarning:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: true
        MinimumSpeedThreshold:
          type: integer
          format: int32
          nullable: true
          example: 30
        CmsThreshold:
          type: number
          format: float
          nullable: true
          example: 0.5
        HapticThreshold:
          type: number
          format: float
          nullable: true
          example: 0.7
        OnThreshold:
          type: integer
          format: int32
          nullable: true
          example: 5
        OffThreshold:
          type: integer
          format: int32
          nullable: true
          example: 3
    PassiveForwardCollisionWarning:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: true
    Overspeed:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: true
        Threshold:
          type: integer
          format: int32
          nullable: true
          example: 80
        MinimumDuration:
          type: integer
          format: int32
          nullable: true
          example: 5
        MaximumDuration:
          type: integer
          format: int32
          nullable: true
          example: 60
        DataFrequency:
          type: integer
          format: int32
          nullable: true
          example: 2
        OffDuration:
          type: integer
          format: int32
          nullable: true
          example: 10
    ExcessiveOverspeed:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: true
        Threshold:
          type: integer
          format: int32
          nullable: true
          example: 100
        MinimumDuration:
          type: integer
          format: int32
          nullable: true
          example: 10
    StabilityControl:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: true
        Sources:
          type: "string"
          example: "ABS,ESC"
        SpeedThreshold:
          type: integer
          format: int32
          nullable: true
          example: 45
        OnCount:
          type: integer
          format: int32
          nullable: true
          example: 3
        OffCount:
          type: integer
          format: int32
          nullable: true
          example: 2
    LaneDepartureWarning:
      properties:
        Active:
          $ref: "#/components/schemas/ActiveLaneDepartureWarning"
          example: 
        Imminent:
          $ref: "#/components/schemas/ImminentLaneDepartureWarning"
          example: 
        Disable:
          $ref: "#/components/schemas/DisableLaneDepartureWarning"
          example: 
    PanicEvent:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: false
    ManualEvent:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: false
    WorkAloneEvent:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: false
    RouteStop:
      properties:
        StopID:
          type: "string"
          example: Stop001
        StopSequence:
          type: "string"
          example: 1
        SiteID:
          type: "string"
          example: Site001
        StopArrivalTime:
          type: "string"
          example: 2025-03-25T10:30:00
        StopDepartureTime:
          type: "string"
          example: 2025-03-25T10:45:00
        LegOverrideType:
          type: "string"
          example: OverrideTypeA
        LegTime:
          type: "string"
          example: 45
        LegMilesKilometers:
          type: "string"
          example: 120 km
        Note:
          type: "string"
          example: Notes about the stop
        Activities:
          $ref: "#/components/schemas/RouteStopActivity"
          example: 
        OutboundSID:
          type: "string"
          example: SID001
        InboundFormNumbers:
          type: array
          items: 
            type: string
          example: ["Form001", "Form002"]
    RouteTrip:
      properties:
        TripID:
          type: "string"
          example: T12345
        TripSequenceNumber:
          type: "string"
          example: 1
        DriverID:
          type: "string"
          example: D123
        DriverName:
          type: "string"
          example: John Doe
        VIN:
          type: "string"
          example: 1HGBH41JXMN109186
        VehicleID:
          type: "string"
          example: V9876
    RouteStopV2:
      properties:
        StopID:
          type: "string"
          example: S001
        StopSequence:
          type: "string"
          example: 1
        SiteID:
          type: "string"
          example: Site123
        StopArrivalTime:
          type: "string"
          example: 2023-03-25T08:30:00
        StopDepartureTime:
          type: "string"
          example: 2023-03-25T09:00:00
        LegOverrideType:
          type: "string"
          example: OverrideTypeA
        LegTime:
          type: "string"
          example: 120
        LegMilesKilometers:
          type: "string"
          example: 100
        Note:
          type: "string"
          example: No delays.
        Activities:
          $ref: "#/components/schemas/RouteStopActivityV2"
          example: 
        OutboundSID:
          type: "string"
          example: Outbound001
        InboundFormNumbers:
          type: array
          items: 
            type: string
          example: ["Form001", "Form002"]
    DeliveryWindow:
      properties:
        BeginTime:
          type: "string"
          example: 08:00 AM
        DayOfWeek:
          type: "string"
          example: Monday
        EndTime:
          type: "string"
          example: 05:00 PM
        IsAllowDelivery:
          type: "string"
          example: Yes
    CRMSubscription:
      properties:
        SubscriptionId:
          type: "string"
          example: SUB12345
        ExpireTime:
          type: string
          format: datetime
          example: 2025-12-31T23:59:59
        HasRelay:
          type: "string"
          example: true
        IsChannel:
          type: "string"
          example: false
    TripStop:
      properties:
        Unplanned:
          type: "boolean"
          example: false
        StopID:
          type: "string"
          example: TS123
        StopIdentity:
          type: "string"
          example: MainSite123
        StopSequence:
          type: "string"
          example: 1
        SiteID:
          type: "string"
          example: SITE456
        ManualSiteID:
          type: "string"
          example: MANUAL789
        Longitude:
          type: "string"
          example: -122.4194
        Latitude:
          type: "string"
          example: 37.7749
        Location:
          type: "string"
          example: Main Warehouse
        ArrivalFuel:
          type: "string"
          example: 50L
        DepartureFuel:
          type: "string"
          example: 45L
        ArrivalOdometer:
          type: "string"
          example: 1000
        DepartureOdometer:
          type: "string"
          example: 1050
        StopArrivalTime:
          type: "string"
          example: 2025-03-25T08:00:00Z
        StopDepartureTime:
          type: "string"
          example: 2025-03-25T08:30:00Z
        ModifiedDate:
          type: "string"
          example: 2025-03-25T08:15:00Z
        ActivityList:
          $ref: "#/components/schemas/TripStopActivity"
          example: 
        DelayList:
          $ref: "#/components/schemas/DelayFieldList"
          example: 
        MessageSIDs:
          type: array
          items: 
            type: string
          example: ["abc-1234", "xyz-5678"]
        RequesterInboxSIDs:
          type: array
          items: 
            type: string
          example: ["inbox-001", "inbox-002"]
    FieldData:
      properties:
        FieldName:
          type: "string"
          example: Vehicle Inspection Report
        Data:
          type: "string"
          example: SGVsbG8gd29ybGQht
        ContainerName:
          type: "string"
          example: Normal
        ContainerRepeatCount:
          type: integer
          format: int32
          example: 216
        FieldId:
          type: "string"
          example: 1
    DriverLogAnnotations:
      properties:
        EditComment:
          type: "string"
          example: String Edit comment
        DutyStatusComment1:
          type: "string"
          example: String Status comment
        DutyStatusComment2:
          type: "string"
          example: String status comment 2
        SpecialDrivingConditionComment1:
          type: "string"
          example: String Special Driving condition comment
        SpecialDrivingConditionComment2:
          type: "string"
          example: String Special condition comment 2
        DriverComment:
          type: "string"
          example: String Driver comment
        ClientComment:
          type: "string"
          example: Sttring Client comment
        ReclassifyComment:
          type: "string"
          example: String Reclassify comment
    DailyMotionSegmentInfoDetailed:
      properties:
        Driver:
          type: "string"
          example: John Doe
        VehicleId:
          type: "string"
          example: V12345
        PostTripInspectionDuration:
          type: "string"
          example: 15
        PreTripInspectionDuration:
          type: "string"
          example: 30
        MidTripInspectionDuration:
          type: "string"
          example: 10
        EngineTime:
          type: "string"
          example: 120
        IdleTime:
          type: "string"
          example: 30
        Latitude:
          type: "string"
          example: 40.7128
        Longitude:
          type: "string"
          example: -74.0060
        Odo:
          type: "string"
          example: 50000
        IdleFuel:
          type: "string"
          example: 5
        IdlePercentage:
          type: "string"
          example: 10
        CoDriver:
          type: "string"
          example: Jane Doe
        FuelEconomy:
          type: "string"
          example: 15.5
    ActiveLaneDepartureWarning:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: true
        OnCount:
          type: integer
          format: int32
          nullable: true
          example: 3
        OffCount:
          type: integer
          format: int32
          nullable: true
          example: 2
        TimeThreshold:
          type: integer
          format: int32
          nullable: true
          example: 5
        CountThreshold:
          type: integer
          format: int32
          nullable: true
          example: 10
        SpeedThreshold:
          type: integer
          format: int32
          nullable: true
          example: 50
    ImminentLaneDepartureWarning:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: true
        OnCount:
          type: integer
          format: int32
          nullable: true
          example: 2
        OffCount:
          type: integer
          format: int32
          nullable: true
          example: 1
        TimeThreshold:
          type: integer
          format: int32
          nullable: true
          example: 3
        CountThreshold:
          type: integer
          format: int32
          nullable: true
          example: 7
        SpeedThreshold:
          type: integer
          format: int32
          nullable: true
          example: 55
    DisableLaneDepartureWarning:
      properties:
        EnableEvent:
          type: "boolean"
          nullable: true
          example: false
        OnCount:
          type: integer
          format: int32
          nullable: true
          example: 4
        OffCount:
          type: integer
          format: int32
          nullable: true
          example: 1
        TimeThreshold:
          type: integer
          format: int32
          nullable: true
          example: 6
        CountThreshold:
          type: integer
          format: int32
          nullable: true
          example: 8
        SpeedThreshold:
          type: integer
          format: int32
          nullable: true
          example: 60
    RouteStopActivity:
      properties:
        ActivityType:
          type: "string"
          example: Unloading
        Fields:
          $ref: "#/components/schemas/RouteStopActivityField"
          example: 
    RouteStopActivityV2:
      properties:
        ActivityID:
          type: "string"
          example: ACT123
    TripStopActivity:
      properties:
        ActivityType:
          type: "string"
          example: Fueling
        ActivityFieldList:
          $ref: "#/components/schemas/TripStopActivityField"
          example: 
        ModifiedDate:
          type: "string"
          example: 2025-03-25T08:15:00Z
        MessageSIDs:
          type: array
          items: 
            type: string
          example: ["msg-1234", "msg-5678"]
        Unplanned:
          type: "boolean"
          example: false
        RequesterInboxSIDs:
          type: array
          items: 
            type: string
          example: ["inbox-001", "inbox-003"]
    DelayFieldList:
      properties:
        DelayReason:
          type: "string"
          example: Accident on the road
        BeginTime:
          type: "string"
          example: 2025-03-25T08:00:00Z
        EndTime:
          type: "string"
          example: 2025-03-25T10:00:00Z
        IsManualEnd:
          type: "string"
          example: No
    RouteStopActivityField:
      properties:
        ActivityFieldName:
          type: "string"
          example: Weight
        ActivityFieldValue:
          type: "string"
          example: 1500 kg
    TripStopActivityField:
      properties:
        ActivityFieldName:
          type: "string"
          example: FuelType
        ActivityFieldValue:
          type: "string"
          example: Diesel
